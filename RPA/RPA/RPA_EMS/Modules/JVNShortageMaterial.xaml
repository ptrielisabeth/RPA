<Activity mc:Ignorable="sap sap2010" x:Class="JVNShortageMaterial" sap:VirtualizedContainerService.HintSize="1314,701" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:bem="clr-namespace:BalaReva.EasyExcel.Main;assembly=BalaReva.EasyExcel" xmlns:bes="clr-namespace:BalaReva.EasyExcel.Sheets;assembly=BalaReva.EasyExcel" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:umab="clr-namespace:UiPath.Mail.Activities.Business;assembly=UiPath.Mail.Activities" xmlns:umabh="clr-namespace:UiPath.Mail.Activities.Business.HtmlEditor;assembly=UiPath.Mail.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="82">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>DocumentFormat.OpenXml.Spreadsheet</x:String>
      <x:String>DocumentFormat.OpenXml</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>BalaReva.EasyExcel.Sheets</x:String>
      <x:String>BalaReva.EasyExcel.Base</x:String>
      <x:String>BalaReva.EasyExcel.Main</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>BalaReva.EasyExcel.Utilities</x:String>
      <x:String>UiPath.Core.Activities.TextModifications</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="44">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>DocumentFormat.OpenXml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>BalaReva.EasyExcel</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>BalaReva.Excel</AssemblyReference>
      <AssemblyReference>BalaReva.Excel.Base</AssemblyReference>
      <AssemblyReference>BalaReva.EasyExcel.Utilities</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>Box.V2</AssemblyReference>
      <AssemblyReference>UiPath.Box.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="JVN Shortage Material" sap:VirtualizedContainerService.HintSize="664,636" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="scg:List(x:String)" Name="GetSubFolder" />
      <Variable x:TypeArguments="x:Boolean" Name="MatchFPY" />
      <Variable x:TypeArguments="s:DateTime" Name="get_date" />
      <Variable x:TypeArguments="x:String" Name="GetPath1" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="SheetsWorkbook" />
      <Variable x:TypeArguments="x:Int32" Name="ErrorStatus" />
      <Variable x:TypeArguments="x:String" Name="textReplace" />
      <Variable x:TypeArguments="s:String[]" Name="ReplaceText" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtCsv" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt13" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt12" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="intAddDays" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
        <av:Point x:Key="ShapeLocation">0,12.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">60,50 189,50</av:PointCollection>
        <x:Double x:Key="Width">630</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID11</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID7">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">420,255.6</av:Point>
          <av:Size x:Key="ShapeSize">200,66</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="JVN Shortage Material" sap:VirtualizedContainerService.HintSize="1153,6231" sap2010:WorkflowViewState.IdRef="Sequence_4971">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="LookBuyer" />
          <Variable x:TypeArguments="x:String" Name="LookRiskLevel" />
          <Variable x:TypeArguments="x:String" Name="StrRisk" />
          <Variable x:TypeArguments="scg:IEnumerable(x:Object)" Name="OutCol" />
          <Variable x:TypeArguments="x:String" Name="StrBuyer" />
          <Variable x:TypeArguments="x:String" Name="LookPart" />
          <Variable x:TypeArguments="x:String" Name="StrPart" />
          <Variable x:TypeArguments="x:String" Name="StrSupplier" />
          <Variable x:TypeArguments="x:String" Name="LookSupplier" />
          <Variable x:TypeArguments="x:String" Name="StrManuf" />
          <Variable x:TypeArguments="x:String" Name="LookManuf" />
          <Variable x:TypeArguments="x:String" Name="StrMPN" />
          <Variable x:TypeArguments="x:String" Name="LookMPN" />
          <Variable x:TypeArguments="x:String" Name="StrCommodity" />
          <Variable x:TypeArguments="x:String" Name="LookCommodity" />
          <Variable x:TypeArguments="x:String" Name="StrWhere" />
          <Variable x:TypeArguments="x:String" Name="LookWhere" />
          <Variable x:TypeArguments="x:String" Name="StrFamily" />
          <Variable x:TypeArguments="x:String" Name="LookFamily" />
          <Variable x:TypeArguments="x:String" Name="StrSC" />
          <Variable x:TypeArguments="x:String" Name="LookSC" />
          <Variable x:TypeArguments="x:Int32" Name="listIndex" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="Loop Files" sap:VirtualizedContainerService.HintSize="1111,6139" sap2010:WorkflowViewState.IdRef="ForEach`1_226" Values="[GetSubFolder]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="x:Object">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:Object" Name="subfileitem" />
              </ActivityAction.Argument>
              <Sequence sap:VirtualizedContainerService.HintSize="1075,6015" sap2010:WorkflowViewState.IdRef="Sequence_5012">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Int32" Default="0" Name="intAddDays" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="1033,60" sap2010:WorkflowViewState.IdRef="Assign_1875">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[GetPath1]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[Path.GetFileNameWithoutExtension(subfileitem.ToString)]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="1033,5823" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_322" InstanceCachePeriod="3000" WorkbookPath="[subfileitem.ToString]">
                  <ui:ExcelApplicationScope.Body>
                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="999,5714" sap2010:WorkflowViewState.IdRef="Sequence_5010">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ExcelGetWorkbookSheets DisplayName="Search Supply Demand Sheet" sap:VirtualizedContainerService.HintSize="957,22" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_47" Sheets="[SheetsWorkbook]" />
                        <Sequence sap:VirtualizedContainerService.HintSize="957,5560" sap2010:WorkflowViewState.IdRef="Sequence_5009">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="915,189" sap2010:WorkflowViewState.IdRef="ForEach`1_227" Values="[SheetsWorkbook.Where(Function(s) s Like &quot;SupplyDemand&quot;).ToList()]">
                            <ui:ForEach.Body>
                              <ActivityAction x:TypeArguments="x:Object">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="x:Object" Name="itemSheets" />
                                </ActivityAction.Argument>
                                <Sequence sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_5014">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="Modules\COOvb.bas" DisplayName="Invoke VBA" EntryMethodName="DefaultPageFormat" EntryMethodParameters="[{&quot;SupplyDemand&quot;}]" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_2" />
                                  <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="LookUp Range" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_305" Result="[LookBuyer]" SheetName="[itemSheets.ToString]" Value="Buyer Name">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:ExcelLookUpRange>
                                  <ui:ExcelReadRange DataTable="{x:Null}" AddHeaders="True" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_676" Range="[LookBuyer]" SheetName="[itemSheets.ToString]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:ExcelReadRange>
                                  <If Condition="[LookBuyer &lt;&gt; Nothing]" sap:VirtualizedContainerService.HintSize="484,682" sap2010:WorkflowViewState.IdRef="If_1173">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <Sequence sap:VirtualizedContainerService.HintSize="376,506" sap2010:WorkflowViewState.IdRef="Sequence_5013">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_677" Range="[LookBuyer]" SheetName="[itemSheets.ToString]" />
                                        <ui:FilterDataTable DataTable="[dt13]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="334,160" sap2010:WorkflowViewState.IdRef="FilterDataTable_167" OutputDataTable="[dt13]" SelectColumnsMode="Keep">
                                          <ui:FilterDataTable.Filters>
                                            <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                              <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                                <ui:FilterOperationArgument.Column>
                                                  <InArgument x:TypeArguments="x:String">["1"]</InArgument>
                                                </ui:FilterOperationArgument.Column>
                                                <ui:FilterOperationArgument.Operand>
                                                  <InArgument x:TypeArguments="x:String">["Balance"]</InArgument>
                                                </ui:FilterOperationArgument.Operand>
                                              </ui:FilterOperationArgument>
                                            </scg:List>
                                          </ui:FilterDataTable.Filters>
                                          <ui:FilterDataTable.SelectColumns>
                                            <scg:List x:TypeArguments="InArgument" Capacity="4">
                                              <x:Null />
                                            </scg:List>
                                          </ui:FilterDataTable.SelectColumns>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:FilterDataTable>
                                        <ui:WriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteRange_603" SheetName="Sheet1" StartingCell="A1" WorkbookPath="[&quot;C:\Users\SESA494506\Pictures\New folder\&quot;+GetPath1+&quot;.xlsx&quot;]">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:WriteRange>
                                      </Sequence>
                                    </If.Then>
                                  </If>
                                </Sequence>
                              </ActivityAction>
                            </ui:ForEach.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:ForEach>
                          <bem:ExcelScope FilePassword="{x:Null}" ModifyPassword="{x:Null}" DisplayAlerts="False" DisplayName="Replace Comma" FilePath="[&quot;C:\Users\SESA494506\Pictures\New folder\&quot;+GetPath1+&quot;.xlsx&quot;]" sap:VirtualizedContainerService.HintSize="915,317" sap2010:WorkflowViewState.IdRef="ExcelScope_96" UpdateAutoLinks="Default" Visible="False">
                            <bem:ExcelScope.Body>
                              <ActivityAction x:TypeArguments="bem:ExcelParam">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="bem:ExcelParam" Name="WorkBookObj" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="242,176" sap2010:WorkflowViewState.IdRef="Sequence_4976">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <bes:FindReplace ExecutionResult="{x:Null}" Output="{x:Null}" ContinueOnError="True" Delay="3" DisplayName="Find &amp; Replace" FindOption="Part" FindText="," sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="FindReplace_109" MatchCase="False" ReplaceText=";" SheetName="Sheet1">
                                    <bes:FindReplace.CellRange>
                                      <InArgument x:TypeArguments="x:String">
                                        <Literal x:TypeArguments="x:String" Value="" />
                                      </InArgument>
                                    </bes:FindReplace.CellRange>
                                  </bes:FindReplace>
                                  <bes:FindReplace ExecutionResult="{x:Null}" Output="{x:Null}" ContinueOnError="True" Delay="3" DisplayName="Find &amp; Replace" FindOption="Part" FindText="'" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="FindReplace_110" MatchCase="False" SheetName="Sheet1">
                                    <bes:FindReplace.CellRange>
                                      <InArgument x:TypeArguments="x:String">
                                        <Literal x:TypeArguments="x:String" Value="" />
                                      </InArgument>
                                    </bes:FindReplace.CellRange>
                                    <bes:FindReplace.ReplaceText>
                                      <InArgument x:TypeArguments="x:String">
                                        <Literal x:TypeArguments="x:String" Value="" />
                                      </InArgument>
                                    </bes:FindReplace.ReplaceText>
                                  </bes:FindReplace>
                                </Sequence>
                              </ActivityAction>
                            </bem:ExcelScope.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </bem:ExcelScope>
                          <ui:KillProcess AppliesTo="{x:Null}" ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="915,132" sap2010:WorkflowViewState.IdRef="KillProcess_3" ProcessName="EXCEL">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:KillProcess>
                          <Delay Duration="00:00:10" sap:VirtualizedContainerService.HintSize="915,22" sap2010:WorkflowViewState.IdRef="Delay_3" />
                          <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="915,3967" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_321" InstanceCachePeriod="3000" WorkbookPath="[&quot;C:\Users\sesa494506\Pictures\New folder\&quot;+GetPath1+&quot;.xlsx&quot;]">
                            <ui:ExcelApplicationScope.Body>
                              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="568,3858" sap2010:WorkflowViewState.IdRef="Sequence_5006">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Sequence DisplayName="Risk Level" sap:VirtualizedContainerService.HintSize="526,285" sap2010:WorkflowViewState.IdRef="Sequence_4978">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="Risk Level" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_295" Result="[LookRiskLevel]" SheetName="Sheet1" Value="Risk Level" />
                                    <Sequence sap:VirtualizedContainerService.HintSize="334,66" sap2010:WorkflowViewState.IdRef="Sequence_4977">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1876">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[StrRisk]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookRiskLevel,"\d", "")]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_314" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookRiskLevel]" />
                                      <ui:ExcelReadRange AddHeaders="True" DataTable="[dt12]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_665" Range="[LookRiskLevel+&quot;:&quot;+StrRisk+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                      <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt12]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_45" SheetName="SupplyDemand" StartingCell="M1" />
                                    </Sequence>
                                  </Sequence>
                                  <Sequence DisplayName="Buyer Name" sap:VirtualizedContainerService.HintSize="526,285" sap2010:WorkflowViewState.IdRef="Sequence_4981">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="Buyer Name" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_296" Result="[LookBuyer]" SheetName="Sheet1" Value="Buyer Name" />
                                    <Sequence sap:VirtualizedContainerService.HintSize="334,66" sap2010:WorkflowViewState.IdRef="Sequence_4980">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1877">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[StrBuyer]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookBuyer,"\d", "")]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_315" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookBuyer]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExcelReadColumn>
                                      <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_666" Range="[LookBuyer+&quot;:&quot;+StrBuyer+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                      <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_46" SheetName="SupplyDemand" StartingCell="A1" />
                                    </Sequence>
                                  </Sequence>
                                  <Sequence DisplayName="Part" sap:VirtualizedContainerService.HintSize="526,285" sap2010:WorkflowViewState.IdRef="Sequence_4984">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="Part" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_297" Result="[LookPart]" SheetName="Sheet1" Value="Part" />
                                    <Sequence sap:VirtualizedContainerService.HintSize="334,66" sap2010:WorkflowViewState.IdRef="Sequence_4983">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1878">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[StrPart]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookPart,"\d", "")]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_316" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookPart]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExcelReadColumn>
                                      <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_667" Range="[LookPart+&quot;:&quot;+StrPart+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                      <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_47" SheetName="SupplyDemand" StartingCell="B1" />
                                    </Sequence>
                                  </Sequence>
                                  <Sequence DisplayName="Supplier" sap:VirtualizedContainerService.HintSize="526,285" sap2010:WorkflowViewState.IdRef="Sequence_4987">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="Part" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_298" Result="[LookSupplier]" SheetName="Sheet1" Value="Supplier" />
                                    <Sequence sap:VirtualizedContainerService.HintSize="334,66" sap2010:WorkflowViewState.IdRef="Sequence_4986">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1879">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[StrSupplier]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookSupplier,"\d", "")]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_317" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookSupplier]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExcelReadColumn>
                                      <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_668" Range="[LookSupplier+&quot;:&quot;+StrSupplier+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                      <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_48" SheetName="SupplyDemand" StartingCell="C1" />
                                    </Sequence>
                                  </Sequence>
                                  <Sequence DisplayName="Manufacturer" sap:VirtualizedContainerService.HintSize="526,285" sap2010:WorkflowViewState.IdRef="Sequence_4990">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="Manuf" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_299" Result="[LookManuf]" SheetName="Sheet1" Value="Manufacturer" />
                                    <Sequence sap:VirtualizedContainerService.HintSize="334,66" sap2010:WorkflowViewState.IdRef="Sequence_4989">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1880">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[StrManuf]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookManuf,"\d", "")]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_318" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookManuf]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExcelReadColumn>
                                      <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_669" Range="[LookManuf+&quot;:&quot;+StrManuf+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                      <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_49" SheetName="SupplyDemand" StartingCell="D1" />
                                    </Sequence>
                                  </Sequence>
                                  <Sequence DisplayName="MPN" sap:VirtualizedContainerService.HintSize="526,285" sap2010:WorkflowViewState.IdRef="Sequence_4993">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="MPN" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_300" Result="[LookMPN]" SheetName="Sheet1" Value="MPN" />
                                    <Sequence sap:VirtualizedContainerService.HintSize="334,66" sap2010:WorkflowViewState.IdRef="Sequence_4992">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1881">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[StrMPN]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookMPN,"\d", "")]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_319" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookMPN]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExcelReadColumn>
                                      <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_670" Range="[LookMPN+&quot;:&quot;+StrMPN+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                      <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_50" SheetName="SupplyDemand" StartingCell="E1" />
                                    </Sequence>
                                  </Sequence>
                                  <Sequence DisplayName="Commodity" sap:VirtualizedContainerService.HintSize="526,285" sap2010:WorkflowViewState.IdRef="Sequence_4996">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="Commodity" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_301" Result="[LookCommodity]" SheetName="Sheet1" Value="Commodity" />
                                    <Sequence sap:VirtualizedContainerService.HintSize="334,66" sap2010:WorkflowViewState.IdRef="Sequence_4995">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1882">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[StrCommodity]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookCommodity,"\d", "")]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_320" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookCommodity]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExcelReadColumn>
                                      <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_671" Range="[LookCommodity+&quot;:&quot;+StrCommodity+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                      <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_51" SheetName="SupplyDemand" StartingCell="F1" />
                                    </Sequence>
                                  </Sequence>
                                  <Sequence DisplayName="Where use" sap:VirtualizedContainerService.HintSize="526,285" sap2010:WorkflowViewState.IdRef="Sequence_4999">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="Where use" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_302" Result="[LookWhere]" SheetName="Sheet1" Value="Where use" />
                                    <Sequence sap:VirtualizedContainerService.HintSize="334,66" sap2010:WorkflowViewState.IdRef="Sequence_4998">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1883">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[StrWhere]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookWhere,"\d", "")]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_321" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookWhere]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExcelReadColumn>
                                      <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_672" Range="[LookWhere+&quot;:&quot;+StrWhere+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                      <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_52" SheetName="SupplyDemand" StartingCell="G1" />
                                    </Sequence>
                                  </Sequence>
                                  <Sequence DisplayName="Family" sap:VirtualizedContainerService.HintSize="526,285" sap2010:WorkflowViewState.IdRef="Sequence_5002">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="Family" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_303" Result="[LookFamily]" SheetName="Sheet1" Value="Family" />
                                    <Sequence sap:VirtualizedContainerService.HintSize="334,66" sap2010:WorkflowViewState.IdRef="Sequence_5001">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1884">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[StrFamily]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookFamily,"\d", "")]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_322" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookFamily]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExcelReadColumn>
                                      <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_673" Range="[LookFamily+&quot;:&quot;+StrFamily+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                      <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_53" SheetName="SupplyDemand" StartingCell="H1" />
                                    </Sequence>
                                  </Sequence>
                                  <Sequence DisplayName="SC/SNC" sap:VirtualizedContainerService.HintSize="526,680" sap2010:WorkflowViewState.IdRef="Sequence_5005">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="SC/SNC" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_304" Result="[LookSC]" SheetName="Sheet1" Value="SC/SNC" />
                                    <If Condition="[LookSC = &quot;&quot;]" sap:VirtualizedContainerService.HintSize="484,355" sap2010:WorkflowViewState.IdRef="If_1191">
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_5097">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="SC/SNC" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_318" Result="[LookSC]" SheetName="Sheet1" Value="Ext Mat Group" />
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_5098">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                    <Sequence sap:VirtualizedContainerService.HintSize="484,66" sap2010:WorkflowViewState.IdRef="Sequence_5004">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1885">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[StrSC]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookSC,"\d", "")]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_323" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookSC]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExcelReadColumn>
                                      <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_674" Range="[LookSC+&quot;:&quot;+StrSC+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                      <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_54" SheetName="SupplyDemand" StartingCell="I1" />
                                    </Sequence>
                                  </Sequence>
                                  <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="526,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_1" />
                                  <ui:ExcelReadRange Range="{x:Null}" AddHeaders="False" DataTable="[dtCsv]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="526,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_675" SheetName="SupplyDemand" />
                                </Sequence>
                              </ActivityAction>
                            </ui:ExcelApplicationScope.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:ExcelApplicationScope>
                          <Sequence sap:VirtualizedContainerService.HintSize="915,444" sap2010:WorkflowViewState.IdRef="Sequence_5007">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Assign_1886">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[textReplace]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[GetPath1]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Assign_1887">
                              <Assign.To>
                                <OutArgument x:TypeArguments="s:String[]">[ReplaceText]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="s:String[]">[textReplace.Split("_"C)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:WriteCsvFile Encoding="{x:Null}" AddHeaders="False" DataTable="[dtCsv]" Delimitator="Comma" DisplayName="Write CSV" FilePath="[&quot;\\10.155.152.114\EMS_Upload\JVN SC SHORTAGE\JVN SC SHORTAGE &quot;+ReplaceText(1).ToString+&quot;.csv&quot;]" sap:VirtualizedContainerService.HintSize="434,152" sap2010:WorkflowViewState.IdRef="WriteCsvFile_193">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:WriteCsvFile>
                          </Sequence>
                          <ui:CopyFile ContinueOnError="{x:Null}" Destination="[&quot;\\10.155.152.114\EMS_Upload\JVN SC SHORTAGE\JVN SC SHORTAGE &quot;+ReplaceText(1).ToString+&quot;.xlsx&quot;]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="915,157" sap2010:WorkflowViewState.IdRef="CopyFile_378" Overwrite="True" Path="[subfileitem.ToString]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:CopyFile>
                        </Sequence>
                      </Sequence>
                    </ActivityAction>
                  </ui:ExcelApplicationScope.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelApplicationScope>
              </Sequence>
            </ActivityAction>
          </ui:ForEach.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEach>
      </Sequence>
    </FlowStep>
    <FlowStep x:Name="__ReferenceID11">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">189,18</av:Point>
          <av:Size x:Key="ShapeSize">262,64</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">320,82 320,133.6</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="262,64" sap2010:WorkflowViewState.IdRef="Assign_1873">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:List(x:String)">[GetSubFolder]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:List(x:String)" xml:space="preserve">[directory.GetFiles("C:\Users\"+Environment.UserName+"\Box\EMS Control Tower\JVN DATA\Supply Chain\Shortage Material","*Schneider_"+Now.ToString("yyyy")+"*"
).Where(Function(x) New FileInfo(x).LastModifiedDate &gt; Now.AddDays(intAddDays - 7).ToShortDateString And New FileInfo(x).LastModifiedDate &lt;= Now.AddDays(1).ToShortDateString
).OrderBy(Function(d) New FileInfo(d).CreationTime).ToList]</InArgument>
        </Assign.Value>
      </Assign>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID10">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">220,133.6</av:Point>
              <av:Size x:Key="ShapeSize">200,51</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">320,184.6 320,246.5</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Flowchart DisplayName="Checking Excel" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="Flowchart_2">
            <Flowchart.Variables>
              <Variable x:TypeArguments="x:Int32" Default="0" Name="intIndex" />
              <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="listEmail" />
              <Variable x:TypeArguments="sd:DataTable" Name="dtFileChecking" />
              <Variable x:TypeArguments="scg:List(x:String)" Name="listFolder" />
            </Flowchart.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <av:Point x:Key="ShapeLocation">0,2.4</av:Point>
                <av:Size x:Key="ShapeSize">60,75</av:Size>
                <av:PointCollection x:Key="ConnectorLocation">60,39.9 90,39.9 90,40 109,40</av:PointCollection>
                <x:Double x:Key="Width">830</x:Double>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Flowchart.StartNode>
              <x:Reference>__ReferenceID6</x:Reference>
            </Flowchart.StartNode>
            <FlowStep x:Name="__ReferenceID0">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">630,264.5</av:Point>
                  <av:Size x:Key="ShapeSize">200,51</av:Size>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[listEmail.Item(0).DateAsDateTime.ToShortDateString &lt;&gt; Now.ToShortDateString]" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="If_1177">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <If Condition="[dtFileChecking.Rows.Count &gt; 1]" sap:VirtualizedContainerService.HintSize="512,608" sap2010:WorkflowViewState.IdRef="If_1176">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="476,431" sap2010:WorkflowViewState.IdRef="Sequence_5056">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="strMail" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <umab:CreateHtmlContent DisplayName="Create HTML Content" sap:VirtualizedContainerService.HintSize="434,151" HtmlContent="[strMail]" sap2010:WorkflowViewState.IdRef="CreateHtmlContent_1">
                          <umab:CreateHtmlContent.HtmlContentArg>
                            <umabh:HtmlContentArgument FilePath=".data/HtmlContent0.html">
                              <umabh:HtmlContentArgument.RuntimeImages>
                                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                              </umabh:HtmlContentArgument.RuntimeImages>
                              <umabh:HtmlContentArgument.ValueMappings>
                                <scg:List x:TypeArguments="umabh:HtmlValueMappingBase" Capacity="4">
                                  <umabh:HtmlTableValueMapping Name="Table" Value="[dtFileChecking]" />
                                </scg:List>
                              </umabh:HtmlContentArgument.ValueMappings>
                            </umabh:HtmlContentArgument>
                          </umab:CreateHtmlContent.HtmlContentArg>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </umab:CreateHtmlContent>
                        <ui:SendOutlookMail Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Account="digital.transformation@non.se.com" Body="[strMail]" Cc="ApriyonoDwi.Indarto@se.com;yosi.marlinda@se.com" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="434,148" sap2010:WorkflowViewState.IdRef="SendOutlookMail_562" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" Subject="JVN Shortage Material Notification" To="Sri.Bahaduri@se.com">
                          <ui:SendOutlookMail.Files>
                            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                              <InArgument x:TypeArguments="x:String" />
                            </scg:List>
                          </ui:SendOutlookMail.Files>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:SendOutlookMail>
                      </Sequence>
                    </If.Then>
                  </If>
                </If.Then>
              </If>
            </FlowStep>
            <FlowStep x:Name="__ReferenceID1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">630,179</av:Point>
                  <av:Size x:Key="ShapeSize">200,22</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">730,201 730,264.5</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:GetOutlookMailMessages FilterByMessageIds="{x:Null}" TimeoutMS="{x:Null}" Account="digital.transformation@non.se.com" DisplayName="Get Outlook Mail Messages" Filter="@SQL=urn:schemas:httpmail:subject LIKE '%JVN Shortage Material Notification%'" GetAttachements="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_1" MailFolder="Sent Items" MarkAsRead="False" Messages="[listEmail]" OnlyUnreadMessages="False" OrderByDate="NewestFirst" Top="1" />
              <FlowStep.Next>
                <x:Reference>__ReferenceID0</x:Reference>
              </FlowStep.Next>
            </FlowStep>
            <FlowDecision x:Name="__ReferenceID2" Condition="[dtFileChecking.Rows.Count &lt;= 0]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <av:Point x:Key="ShapeLocation">480.5,146.5</av:Point>
                  <av:Size x:Key="ShapeSize">79,87</av:Size>
                  <av:PointCollection x:Key="FalseConnector">559.5,190 630,190</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <FlowDecision.False>
                <x:Reference>__ReferenceID1</x:Reference>
              </FlowDecision.False>
            </FlowDecision>
            <FlowStep x:Name="__ReferenceID3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">420,14.02</av:Point>
                  <av:Size x:Key="ShapeSize">200,51</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">520,65.02 520,146.5</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="909,905" sap2010:WorkflowViewState.IdRef="ForEach`1_231" Values="[listFolder]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                    </ActivityAction.Argument>
                    <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" DisplayName="Checking Sheet and Column" sap:VirtualizedContainerService.HintSize="873,781" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_323" InstanceCachePeriod="3000" ReadOnly="True" WorkbookPath="[item]">
                      <ui:ExcelApplicationScope.Body>
                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="839,672" sap2010:WorkflowViewState.IdRef="Sequence_5055">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:String" Name="strNotification" />
                              <Variable x:TypeArguments="x:String" Name="strMail" />
                              <Variable x:TypeArguments="s:String[]" Name="listColumnName">
                                <Variable.Default>
                                  <mva:VisualBasicValue x:TypeArguments="s:String[]" ExpressionText="new String(){&quot;Buyer Name&quot;,&quot;Risk Level*&quot;,&quot;Part&quot;,&quot;Supplier&quot;,&quot;Manufacturer&quot;,&quot;MPN&quot;,&quot;Commodity&quot;,&quot;Where use&quot;,&quot;Family&quot;}" />
                                </Variable.Default>
                              </Variable>
                              <Variable x:TypeArguments="x:String" Name="strSheetNameLower" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ExcelGetWorkbookSheets DisplayName="Get Workbook Sheets" sap:VirtualizedContainerService.HintSize="797,22" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_48" Sheets="[SheetsWorkbook]" />
                            <If Condition="[SheetsWorkbook.Where(Function(s) s Like &quot;SupplyDemand&quot;).ToList().Count = 0]" sap:VirtualizedContainerService.HintSize="797,518" sap2010:WorkflowViewState.IdRef="If_1175">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="376,339" sap2010:WorkflowViewState.IdRef="Sequence_5095">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[new String(){&quot;SupplyDemand&quot;, &quot;Not Exist&quot;, &quot;Sheets Doesn't Exist&quot;,Path.GetFileName(item)}]" DataTable="[dtFileChecking]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="AddDataRow_2" />
                                  <RemoveFromCollection x:TypeArguments="x:String" Collection="[GetSubFolder]" DisplayName="Remove From Collection" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="RemoveFromCollection`1_1" Item="[item]" />
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="376,361" sap2010:WorkflowViewState.IdRef="Sequence_5096">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="x:Boolean" Name="boolResult" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="Modules\COOvb.bas" DisplayName="Invoke VBA" EntryMethodName="DefaultPageFormat" EntryMethodParameters="[{&quot;SupplyDemand&quot;}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_1" />
                                  <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="Check Require Column" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="ForEach`1_230" Values="[listColumnName]">
                                    <ui:ForEach.Body>
                                      <ActivityAction x:TypeArguments="x:String">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="x:String" Name="subitem" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,772" sap2010:WorkflowViewState.IdRef="Sequence_5054">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="x:String" Name="strResult" />
                                          </Sequence.Variables>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="LookUp Range" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_306" Result="[strResult]" SheetName="SupplyDemand" Value="[subitem]" />
                                          <If Condition="[strResult = &quot;&quot;]" sap:VirtualizedContainerService.HintSize="484,453" sap2010:WorkflowViewState.IdRef="If_1174">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If.Then>
                                              <Sequence sap:VirtualizedContainerService.HintSize="376,277" sap2010:WorkflowViewState.IdRef="Sequence_5053">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[new String(){subitem, &quot;Not Exist&quot;, &quot;Column Doesn't Exist&quot;,Path.GetFileName(item)}]" DataTable="[dtFileChecking]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="AddDataRow_3" />
                                              </Sequence>
                                            </If.Then>
                                          </If>
                                          <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_1888">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[strResult]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">
                                                <Literal x:TypeArguments="x:String" Value="" />
                                              </InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:ForEach.Body>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:ForEach>
                                  <If Condition="[dtFileChecking.Select(&quot;FileName = '&quot;+Path.GetFileName(item)+&quot;'&quot;).Count &gt; 0]" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="If_1190">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <RemoveFromCollection x:TypeArguments="x:String" Collection="[GetSubFolder]" DisplayName="Remove From Collection" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="RemoveFromCollection`1_2" Item="[item]" Result="[boolResult]" />
                                    </If.Then>
                                  </If>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </ActivityAction>
                      </ui:ExcelApplicationScope.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelApplicationScope>
                  </ActivityAction>
                </ui:ForEach.Body>
              </ui:ForEach>
              <FlowStep.Next>
                <x:Reference>__ReferenceID2</x:Reference>
              </FlowStep.Next>
            </FlowStep>
            <FlowStep x:Name="__ReferenceID6">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">109,8</av:Point>
                  <av:Size x:Key="ShapeSize">262,64</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">240,72 240,104.5</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="262,64" sap2010:WorkflowViewState.IdRef="Assign_1903">
                <Assign.To>
                  <OutArgument x:TypeArguments="scg:List(x:String)">[listFolder]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="scg:List(x:String)" xml:space="preserve">[directory.GetFiles("C:\Users\"+Environment.UserName+"\Box\EMS Control Tower\JVN DATA\Supply Chain\Shortage Material","*Schneider_"+Now.ToString("yyyy")+"*"
).Where(Function(x) New FileInfo(x).LastModifiedDate &gt; Now.AddDays(intAddDays - 7).ToShortDateString And New FileInfo(x).LastModifiedDate &lt;= Now.AddDays(1).ToShortDateString
).OrderBy(Function(d) New FileInfo(d).CreationTime).ToList]</InArgument>
                </Assign.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Assign>
              <FlowStep.Next>
                <FlowStep x:Name="__ReferenceID5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">140,104.5</av:Point>
                      <av:Size x:Key="ShapeSize">200,51</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">240,155.5 240,184.5</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:BuildDataTable DataTable="[dtFileChecking]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="BuildDataTable_2" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Column_x0020__x002F__x0020_Sheets&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Status&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Notes&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;FileName&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:BuildDataTable>
                  <FlowStep.Next>
                    <FlowStep x:Name="__ReferenceID4">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">140,184.5</av:Point>
                          <av:Size x:Key="ShapeSize">200,51</av:Size>
                          <av:PointCollection x:Key="ConnectorLocation">340,210 390,210 390,39.52 420,39.52</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[new String(){&quot;Column/Sheet&quot;, &quot;Status&quot;, &quot;Notes&quot;,&quot;FileName&quot;}]" DataTable="[dtFileChecking]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="AddDataRow_4">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:AddDataRow>
                      <FlowStep.Next>
                        <x:Reference>__ReferenceID3</x:Reference>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowStep.Next>
                </FlowStep>
              </FlowStep.Next>
            </FlowStep>
            <x:Reference>__ReferenceID4</x:Reference>
            <x:Reference>__ReferenceID5</x:Reference>
          </Flowchart>
          <FlowStep.Next>
            <FlowDecision x:Name="__ReferenceID8" Condition="[GetSubFolder.Count = 0]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <av:Point x:Key="ShapeLocation">280.5,246.5</av:Point>
                  <av:Size x:Key="ShapeSize">79,87</av:Size>
                  <av:PointCollection x:Key="FalseConnector">359.5,290 389.5,290 389.5,288.6 420,288.6</av:PointCollection>
                  <av:PointCollection x:Key="TrueConnector">280.5,290.1 250.5,290.1 250.5,290.42 220,290.42</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <FlowDecision.True>
                <FlowStep x:Name="__ReferenceID9">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">20,264.02</av:Point>
                      <av:Size x:Key="ShapeSize">200,51</av:Size>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;End&quot;]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                </FlowStep>
              </FlowDecision.True>
              <FlowDecision.False>
                <x:Reference>__ReferenceID7</x:Reference>
              </FlowDecision.False>
            </FlowDecision>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID8</x:Reference>
    <x:Reference>__ReferenceID9</x:Reference>
    <x:Reference>__ReferenceID10</x:Reference>
    <FlowStep>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">20,505.6</av:Point>
          <av:Size x:Key="ShapeSize">200,66</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="JVN Shortage Material" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_5094">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="LookBuyer" />
          <Variable x:TypeArguments="x:String" Name="LookRiskLevel" />
          <Variable x:TypeArguments="x:String" Name="StrRisk" />
          <Variable x:TypeArguments="scg:IEnumerable(x:Object)" Name="OutCol" />
          <Variable x:TypeArguments="x:String" Name="StrBuyer" />
          <Variable x:TypeArguments="x:String" Name="LookPart" />
          <Variable x:TypeArguments="x:String" Name="StrPart" />
          <Variable x:TypeArguments="x:String" Name="StrSupplier" />
          <Variable x:TypeArguments="x:String" Name="LookSupplier" />
          <Variable x:TypeArguments="x:String" Name="StrManuf" />
          <Variable x:TypeArguments="x:String" Name="LookManuf" />
          <Variable x:TypeArguments="x:String" Name="StrMPN" />
          <Variable x:TypeArguments="x:String" Name="LookMPN" />
          <Variable x:TypeArguments="x:String" Name="StrCommodity" />
          <Variable x:TypeArguments="x:String" Name="LookCommodity" />
          <Variable x:TypeArguments="x:String" Name="StrWhere" />
          <Variable x:TypeArguments="x:String" Name="LookWhere" />
          <Variable x:TypeArguments="x:String" Name="StrFamily" />
          <Variable x:TypeArguments="x:String" Name="LookFamily" />
          <Variable x:TypeArguments="x:String" Name="StrSC" />
          <Variable x:TypeArguments="x:String" Name="LookSC" />
          <Variable x:TypeArguments="x:Int32" Name="listIndex" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="Loop Files" sap:VirtualizedContainerService.HintSize="1490,12807" sap2010:WorkflowViewState.IdRef="ForEach`1_233" Values="[GetSubFolder]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="x:Object">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:Object" Name="subfileitem" />
              </ActivityAction.Argument>
              <Sequence sap:VirtualizedContainerService.HintSize="1454,12683" sap2010:WorkflowViewState.IdRef="Sequence_5093">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Int32" Default="0" Name="intAddDays" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="1412,60" sap2010:WorkflowViewState.IdRef="Assign_1889">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:DateTime">[get_date]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:DateTime">[IO.File.GetLastWriteTime(subfileitem.ToString)]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="1412,60" sap2010:WorkflowViewState.IdRef="Assign_1890">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[GetPath1]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[Path.GetFileNameWithoutExtension(subfileitem.ToString)]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="1412,12391" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_325" InstanceCachePeriod="3000" WorkbookPath="[subfileitem.ToString]">
                  <ui:ExcelApplicationScope.Body>
                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1378,12282" sap2010:WorkflowViewState.IdRef="Sequence_5092">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ExcelGetWorkbookSheets DisplayName="Search Supply Demand Sheet" sap:VirtualizedContainerService.HintSize="1336,22" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_49" Sheets="[SheetsWorkbook]" />
                        <If Condition="[SheetsWorkbook.Where(Function(s) s Like &quot;SupplyDemand&quot;).ToList().Count = 0]" sap:VirtualizedContainerService.HintSize="1336,12128" sap2010:WorkflowViewState.IdRef="If_1189">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="Hello I am SE SuperRobot&#xA;&#xA;Process JVN SC Shortage Material data Error, Sheet not found : Sheet SupplyDemand.&#xA;&#xA;Please ensure the name of sheet not change (same as per previous file), &#xA;punctuation marks (uppercase, lowercase, space, underscore, etc) on your excel file.&#xA;&#xA;Thank you&#xA;&#xA;Regards,&#xA;SE SuperRobot" Cc="Digital.Transformation@non.se.com;ApriyonoDwi.Indarto@se.com;aurore.masselot@se.com" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="SendOutlookMail_563" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="JVN SC Shortage Material Notification - Sheet SupplyDemand Not Found" To="Sri.Bahaduri@se.com">
                              <ui:SendOutlookMail.Files>
                                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                  <InArgument x:TypeArguments="x:String" />
                                </scg:List>
                              </ui:SendOutlookMail.Files>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:SendOutlookMail>
                          </If.Then>
                          <If.Else>
                            <Sequence sap:VirtualizedContainerService.HintSize="957,11971" sap2010:WorkflowViewState.IdRef="Sequence_5091">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="915,1315" sap2010:WorkflowViewState.IdRef="ForEach`1_232" Values="[SheetsWorkbook.Where(Function(s) s Like &quot;SupplyDemand&quot;).ToList()]">
                                <ui:ForEach.Body>
                                  <ActivityAction x:TypeArguments="x:Object">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="x:Object" Name="itemSheets" />
                                    </ActivityAction.Argument>
                                    <Sequence sap:VirtualizedContainerService.HintSize="526,1192" sap2010:WorkflowViewState.IdRef="Sequence_5058">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DelayBefore="3000" DisplayName="Enable AutoFilter" sap:VirtualizedContainerService.HintSize="484,152" sap2010:WorkflowViewState.IdRef="SendHotkey_140" Key="L" KeyModifiers="Ctrl, Shift">
                                        <ui:SendHotkey.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="66988ac9-568e-446e-8cc8-a1227a49ce50" InformativeScreenshot="a11da713e8dedce740d80d0f46208c51" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='* - Excel' /&gt;&lt;ctrl name='*' role='client' /&gt;">
                                            <ui:Target.TimeoutMS>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:Target.TimeoutMS>
                                            <ui:Target.WaitForReady>
                                              <InArgument x:TypeArguments="ui:WaitForReady" />
                                            </ui:Target.WaitForReady>
                                          </ui:Target>
                                        </ui:SendHotkey.Target>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:SendHotkey>
                                      <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="LookUp Range" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_307" Result="[LookBuyer]" SheetName="[itemSheets.ToString]" Value="Buyer Name">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExcelLookUpRange>
                                      <ui:ExcelReadRange DataTable="{x:Null}" AddHeaders="True" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_678" Range="[LookBuyer]" SheetName="[itemSheets.ToString]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExcelReadRange>
                                      <If Condition="[LookBuyer &lt;&gt; Nothing]" sap:VirtualizedContainerService.HintSize="484,682" sap2010:WorkflowViewState.IdRef="If_1178">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376,506" sap2010:WorkflowViewState.IdRef="Sequence_5057">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_679" Range="[LookBuyer]" SheetName="[itemSheets.ToString]" />
                                            <ui:FilterDataTable DataTable="[dt13]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="334,160" sap2010:WorkflowViewState.IdRef="FilterDataTable_168" OutputDataTable="[dt13]" SelectColumnsMode="Keep">
                                              <ui:FilterDataTable.Filters>
                                                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                                  <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                                    <ui:FilterOperationArgument.Column>
                                                      <InArgument x:TypeArguments="x:String">["1"]</InArgument>
                                                    </ui:FilterOperationArgument.Column>
                                                    <ui:FilterOperationArgument.Operand>
                                                      <InArgument x:TypeArguments="x:String">["Balance"]</InArgument>
                                                    </ui:FilterOperationArgument.Operand>
                                                  </ui:FilterOperationArgument>
                                                </scg:List>
                                              </ui:FilterDataTable.Filters>
                                              <ui:FilterDataTable.SelectColumns>
                                                <scg:List x:TypeArguments="InArgument" Capacity="4">
                                                  <x:Null />
                                                </scg:List>
                                              </ui:FilterDataTable.SelectColumns>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:FilterDataTable>
                                            <ui:WriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteRange_604" SheetName="Sheet1" StartingCell="A1" WorkbookPath="[&quot;C:\Users\SESA494506\Pictures\New folder\&quot;+GetPath1+&quot;.xlsx&quot;]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:WriteRange>
                                          </Sequence>
                                        </If.Then>
                                      </If>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ForEach.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ForEach>
                              <bem:ExcelScope FilePassword="{x:Null}" ModifyPassword="{x:Null}" DisplayAlerts="False" DisplayName="Replace Comma" FilePath="[&quot;C:\Users\SESA494506\Pictures\New folder\&quot;+GetPath1+&quot;.xlsx&quot;]" sap:VirtualizedContainerService.HintSize="915,317" sap2010:WorkflowViewState.IdRef="ExcelScope_97" UpdateAutoLinks="Default" Visible="False">
                                <bem:ExcelScope.Body>
                                  <ActivityAction x:TypeArguments="bem:ExcelParam">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="bem:ExcelParam" Name="WorkBookObj" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="242,176" sap2010:WorkflowViewState.IdRef="Sequence_5059">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <bes:FindReplace ExecutionResult="{x:Null}" Output="{x:Null}" ContinueOnError="True" Delay="3" DisplayName="Find &amp; Replace" FindOption="Part" FindText="," sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="FindReplace_111" MatchCase="False" ReplaceText=";" SheetName="Sheet1">
                                        <bes:FindReplace.CellRange>
                                          <InArgument x:TypeArguments="x:String">
                                            <Literal x:TypeArguments="x:String" Value="" />
                                          </InArgument>
                                        </bes:FindReplace.CellRange>
                                      </bes:FindReplace>
                                      <bes:FindReplace ExecutionResult="{x:Null}" Output="{x:Null}" ContinueOnError="True" Delay="3" DisplayName="Find &amp; Replace" FindOption="Part" FindText="'" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="FindReplace_112" MatchCase="False" SheetName="Sheet1">
                                        <bes:FindReplace.CellRange>
                                          <InArgument x:TypeArguments="x:String">
                                            <Literal x:TypeArguments="x:String" Value="" />
                                          </InArgument>
                                        </bes:FindReplace.CellRange>
                                        <bes:FindReplace.ReplaceText>
                                          <InArgument x:TypeArguments="x:String">
                                            <Literal x:TypeArguments="x:String" Value="" />
                                          </InArgument>
                                        </bes:FindReplace.ReplaceText>
                                      </bes:FindReplace>
                                    </Sequence>
                                  </ActivityAction>
                                </bem:ExcelScope.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </bem:ExcelScope>
                              <ui:KillProcess AppliesTo="{x:Null}" ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="915,132" sap2010:WorkflowViewState.IdRef="KillProcess_4" ProcessName="EXCEL">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:KillProcess>
                              <Delay Duration="00:00:10" sap:VirtualizedContainerService.HintSize="915,22" sap2010:WorkflowViewState.IdRef="Delay_4" />
                              <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="915,9252" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_324" InstanceCachePeriod="3000" WorkbookPath="[&quot;C:\Users\sesa494506\Pictures\New folder\&quot;+GetPath1+&quot;.xlsx&quot;]">
                                <ui:ExcelApplicationScope.Body>
                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="881,9143" sap2010:WorkflowViewState.IdRef="Sequence_5089">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Sequence DisplayName="Risk Level" sap:VirtualizedContainerService.HintSize="839,853" sap2010:WorkflowViewState.IdRef="Sequence_5061">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="Risk Level" sap:VirtualizedContainerService.HintSize="755,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_308" Result="[LookRiskLevel]" SheetName="Sheet1" Value="Risk Level" />
                                        <If Condition="[LookRiskLevel is Nothing]" DisplayName="Check Risk Level" sap:VirtualizedContainerService.HintSize="755,634" sap2010:WorkflowViewState.IdRef="If_1179">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If.Then>
                                            <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="Hello I am SE SuperRobot&#xA;&#xA;Process JVN SC Shortage Material data Error, Column not found : Column Risk Level&#xA;&#xA;Please ensure the name of column not change (same as per previous file), &#xA;punctuation marks (uppercase, lowercase, space, underscore, etc) on your excel file.&#xA;&#xA;Thank you&#xA;&#xA;Regards,&#xA;SE SuperRobot" Cc="Digital.Transformation@non.se.com;ApriyonoDwi.Indarto@se.com;aurore.masselot@se.com" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="SendOutlookMail_564" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="JVN SC Shortage Material Notification - Colum Risk Level Not Found" To="Sri.Bahaduri@se.com">
                                              <ui:SendOutlookMail.Files>
                                                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                                  <InArgument x:TypeArguments="x:String" />
                                                </scg:List>
                                              </ui:SendOutlookMail.Files>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:SendOutlookMail>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,477" sap2010:WorkflowViewState.IdRef="Sequence_5060">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1891">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[StrRisk]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookRiskLevel,"\d", "")]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_324" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookRiskLevel]" />
                                              <ui:ExcelReadRange AddHeaders="True" DataTable="[dt12]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_680" Range="[LookRiskLevel+&quot;:&quot;+StrRisk+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                              <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt12]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_56" SheetName="SupplyDemand" StartingCell="M1" />
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                      <Sequence DisplayName="Buyer Name" sap:VirtualizedContainerService.HintSize="839,853" sap2010:WorkflowViewState.IdRef="Sequence_5064">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="Buyer Name" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_309" Result="[LookBuyer]" SheetName="Sheet1" Value="Buyer Name" />
                                        <If Condition="[LookBuyer is Nothing]" DisplayName="Check Buyer Name" sap:VirtualizedContainerService.HintSize="797,634" sap2010:WorkflowViewState.IdRef="If_1180">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,364" sap2010:WorkflowViewState.IdRef="Sequence_5062">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_80" SheetName="Sheet1" Text="Buyer Name" />
                                              <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="Hello I am SE SuperRobot&#xA;&#xA;Process JVN SC Shortage Material data Error, Column not found : Column Buyer Name&#xA;&#xA;Please ensure the name of column not change (same as per previous file), &#xA;punctuation marks (uppercase, lowercase, space, underscore, etc) on your excel file.&#xA;&#xA;Thank you&#xA;&#xA;Regards,&#xA;SE SuperRobot" Cc="Digital.Transformation@non.se.com;ApriyonoDwi.Indarto@se.com;aurore.masselot@se.com" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="SendOutlookMail_565" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="JVN SC Shortage Material Notification - Colum Buyer Name Not Found" To="Sri.Bahaduri@se.com">
                                                <ui:SendOutlookMail.Files>
                                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                                    <InArgument x:TypeArguments="x:String" />
                                                  </scg:List>
                                                </ui:SendOutlookMail.Files>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:SendOutlookMail>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,477" sap2010:WorkflowViewState.IdRef="Sequence_5063">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1892">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[StrBuyer]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookBuyer,"\d", "")]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_325" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookBuyer]">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:ExcelReadColumn>
                                              <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_681" Range="[LookBuyer+&quot;:&quot;+StrBuyer+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                              <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_57" SheetName="SupplyDemand" StartingCell="A1" />
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                      <Sequence DisplayName="Part" sap:VirtualizedContainerService.HintSize="839,853" sap2010:WorkflowViewState.IdRef="Sequence_5067">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="Part" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_310" Result="[LookPart]" SheetName="Sheet1" Value="Part" />
                                        <If Condition="[LookPart is Nothing]" DisplayName="Check Part" sap:VirtualizedContainerService.HintSize="797,634" sap2010:WorkflowViewState.IdRef="If_1181">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,364" sap2010:WorkflowViewState.IdRef="Sequence_5065">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:ExcelWriteCell Cell="B1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_81" SheetName="Sheet1" Text="Part" />
                                              <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="Hello I am SE SuperRobot&#xA;&#xA;Process JVN SC Shortage Material data Error, Column not found : Column Part&#xA;&#xA;Please ensure the name of column not change (same as per previous file), &#xA;punctuation marks (uppercase, lowercase, space, underscore, etc) on your excel file.&#xA;&#xA;Thank you&#xA;&#xA;Regards,&#xA;SE SuperRobot" Cc="Digital.Transformation@non.se.com;ApriyonoDwi.Indarto@se.com;aurore.masselot@se.com" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="SendOutlookMail_566" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="JVN SC Shortage Material Notification - Colum Part Not Found" To="Sri.Bahaduri@se.com">
                                                <ui:SendOutlookMail.Files>
                                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                                    <InArgument x:TypeArguments="x:String" />
                                                  </scg:List>
                                                </ui:SendOutlookMail.Files>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:SendOutlookMail>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,477" sap2010:WorkflowViewState.IdRef="Sequence_5066">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1893">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[StrPart]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookPart,"\d", "")]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_326" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookPart]">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:ExcelReadColumn>
                                              <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_682" Range="[LookPart+&quot;:&quot;+StrPart+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                              <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_58" SheetName="SupplyDemand" StartingCell="B1" />
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                      <Sequence DisplayName="Supplier" sap:VirtualizedContainerService.HintSize="839,853" sap2010:WorkflowViewState.IdRef="Sequence_5070">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="Part" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_311" Result="[LookSupplier]" SheetName="Sheet1" Value="Supplier" />
                                        <If Condition="[LookSupplier is Nothing]" DisplayName="Check Supplier" sap:VirtualizedContainerService.HintSize="797,634" sap2010:WorkflowViewState.IdRef="If_1182">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,364" sap2010:WorkflowViewState.IdRef="Sequence_5068">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:ExcelWriteCell Cell="C1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_82" SheetName="Sheet1" Text="Supplier" />
                                              <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="Hello I am SE SuperRobot&#xA;&#xA;Process JVN SC Shortage Material data Error, Column not found : Column Supplier&#xA;&#xA;Please ensure the name of column not change (same as per previous file), &#xA;punctuation marks (uppercase, lowercase, space, underscore, etc) on your excel file.&#xA;&#xA;Thank you&#xA;&#xA;Regards,&#xA;SE SuperRobot" Cc="Digital.Transformation@non.se.com;ApriyonoDwi.Indarto@se.com;aurore.masselot@se.com" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="SendOutlookMail_567" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="JVN SC Shortage Material Notification - Colum Supplier Not Found" To="Sri.Bahaduri@se.com">
                                                <ui:SendOutlookMail.Files>
                                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                                    <InArgument x:TypeArguments="x:String" />
                                                  </scg:List>
                                                </ui:SendOutlookMail.Files>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:SendOutlookMail>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,477" sap2010:WorkflowViewState.IdRef="Sequence_5069">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1894">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[StrSupplier]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookSupplier,"\d", "")]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_327" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookSupplier]">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:ExcelReadColumn>
                                              <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_683" Range="[LookSupplier+&quot;:&quot;+StrSupplier+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                              <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_59" SheetName="SupplyDemand" StartingCell="C1" />
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                      <Sequence DisplayName="Manufacturer" sap:VirtualizedContainerService.HintSize="839,853" sap2010:WorkflowViewState.IdRef="Sequence_5073">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="Manuf" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_312" Result="[LookManuf]" SheetName="Sheet1" Value="Manufacturer" />
                                        <If Condition="[LookManuf is Nothing]" DisplayName="Check Manuf" sap:VirtualizedContainerService.HintSize="797,634" sap2010:WorkflowViewState.IdRef="If_1183">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,364" sap2010:WorkflowViewState.IdRef="Sequence_5071">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:ExcelWriteCell Cell="D1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_83" SheetName="Sheet1" Text="Manufacturer" />
                                              <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="Hello I am SE SuperRobot&#xA;&#xA;Process JVN SC Shortage Material data Error, Column not found : Column Manufacturer&#xA;&#xA;Please ensure the name of column not change (same as per previous file), &#xA;punctuation marks (uppercase, lowercase, space, underscore, etc) on your excel file.&#xA;&#xA;Thank you&#xA;&#xA;Regards,&#xA;SE SuperRobot" Cc="Digital.Transformation@non.se.com;ApriyonoDwi.Indarto@se.com;aurore.masselot@se.com" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="SendOutlookMail_568" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="JVN SC Shortage Material Notification - Colum Manufacturer Not Found" To="Sri.Bahaduri@se.com">
                                                <ui:SendOutlookMail.Files>
                                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                                    <InArgument x:TypeArguments="x:String" />
                                                  </scg:List>
                                                </ui:SendOutlookMail.Files>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:SendOutlookMail>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,477" sap2010:WorkflowViewState.IdRef="Sequence_5072">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1895">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[StrManuf]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookManuf,"\d", "")]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_328" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookManuf]">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:ExcelReadColumn>
                                              <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_684" Range="[LookManuf+&quot;:&quot;+StrManuf+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                              <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_60" SheetName="SupplyDemand" StartingCell="D1" />
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                      <Sequence DisplayName="MPN" sap:VirtualizedContainerService.HintSize="839,853" sap2010:WorkflowViewState.IdRef="Sequence_5076">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="MPN" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_313" Result="[LookMPN]" SheetName="Sheet1" Value="MPN" />
                                        <If Condition="[LookMPN is Nothing]" DisplayName="Check MPN" sap:VirtualizedContainerService.HintSize="797,634" sap2010:WorkflowViewState.IdRef="If_1184">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,364" sap2010:WorkflowViewState.IdRef="Sequence_5074">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:ExcelWriteCell Cell="E1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_84" SheetName="Sheet1" Text="MPN" />
                                              <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="Hello I am SE SuperRobot&#xA;&#xA;Process JVN SC Shortage Material data Error, Column not found : Column MPN&#xA;&#xA;Please ensure the name of column not change (same as per previous file), &#xA;punctuation marks (uppercase, lowercase, space, underscore, etc) on your excel file.&#xA;&#xA;Thank you&#xA;&#xA;Regards,&#xA;SE SuperRobot" Cc="Digital.Transformation@non.se.com;ApriyonoDwi.Indarto@se.com;aurore.masselot@se.com" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="SendOutlookMail_569" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="JVN SC Shortage Material Notification - Column MPN Not Found" To="Sri.Bahaduri@se.com">
                                                <ui:SendOutlookMail.Files>
                                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                                    <InArgument x:TypeArguments="x:String" />
                                                  </scg:List>
                                                </ui:SendOutlookMail.Files>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:SendOutlookMail>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,477" sap2010:WorkflowViewState.IdRef="Sequence_5075">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1896">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[StrMPN]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookMPN,"\d", "")]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_329" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookMPN]">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:ExcelReadColumn>
                                              <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_685" Range="[LookMPN+&quot;:&quot;+StrMPN+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                              <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_61" SheetName="SupplyDemand" StartingCell="E1" />
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                      <Sequence DisplayName="Commodity" sap:VirtualizedContainerService.HintSize="839,853" sap2010:WorkflowViewState.IdRef="Sequence_5079">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="Commodity" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_314" Result="[LookCommodity]" SheetName="Sheet1" Value="Commodity" />
                                        <If Condition="[LookCommodity is Nothing]" DisplayName="Check Commodity" sap:VirtualizedContainerService.HintSize="797,634" sap2010:WorkflowViewState.IdRef="If_1185">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,364" sap2010:WorkflowViewState.IdRef="Sequence_5077">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:ExcelWriteCell Cell="F1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_85" SheetName="Sheet1" Text="Commodity" />
                                              <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="Hello I am SE SuperRobot&#xA;&#xA;Process JVN SC Shortage Material data Error, Column not found : Column Commodity&#xA;&#xA;Please ensure the name of column not change (same as per previous file), &#xA;punctuation marks (uppercase, lowercase, space, underscore, etc) on your excel file.&#xA;&#xA;Thank you&#xA;&#xA;Regards,&#xA;SE SuperRobot" Cc="Digital.Transformation@non.se.com;ApriyonoDwi.Indarto@se.com;aurore.masselot@se.com" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="SendOutlookMail_570" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="JVN SC Shortage Material Notification - Column Commodity Not Found" To="Sri.Bahaduri@se.com">
                                                <ui:SendOutlookMail.Files>
                                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                                    <InArgument x:TypeArguments="x:String" />
                                                  </scg:List>
                                                </ui:SendOutlookMail.Files>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:SendOutlookMail>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,477" sap2010:WorkflowViewState.IdRef="Sequence_5078">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1897">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[StrCommodity]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookCommodity,"\d", "")]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_330" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookCommodity]">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:ExcelReadColumn>
                                              <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_686" Range="[LookCommodity+&quot;:&quot;+StrCommodity+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                              <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_62" SheetName="SupplyDemand" StartingCell="F1" />
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                      <Sequence DisplayName="Where use" sap:VirtualizedContainerService.HintSize="839,853" sap2010:WorkflowViewState.IdRef="Sequence_5082">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="Where use" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_315" Result="[LookWhere]" SheetName="Sheet1" Value="Where use" />
                                        <If Condition="[LookWhere is Nothing]" DisplayName="Check Where use" sap:VirtualizedContainerService.HintSize="797,634" sap2010:WorkflowViewState.IdRef="If_1186">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,364" sap2010:WorkflowViewState.IdRef="Sequence_5080">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:ExcelWriteCell Cell="G1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_86" SheetName="Sheet1" Text="Where use" />
                                              <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="Hello I am SE SuperRobot&#xA;&#xA;Process JVN SC Shortage Material data Error, Column not found : Column Where use&#xA;&#xA;Please ensure the name of column not change (same as per previous file), &#xA;punctuation marks (uppercase, lowercase, space, underscore, etc) on your excel file.&#xA;&#xA;Thank you&#xA;&#xA;Regards,&#xA;SE SuperRobot" Cc="Digital.Transformation@non.se.com;ApriyonoDwi.Indarto@se.com;aurore.masselot@se.com" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="SendOutlookMail_571" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="JVN SC Shortage Material Notification - Column Where use Not Found" To="Sri.Bahaduri@se.com">
                                                <ui:SendOutlookMail.Files>
                                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                                    <InArgument x:TypeArguments="x:String" />
                                                  </scg:List>
                                                </ui:SendOutlookMail.Files>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:SendOutlookMail>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,477" sap2010:WorkflowViewState.IdRef="Sequence_5081">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1898">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[StrWhere]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookWhere,"\d", "")]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_331" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookWhere]">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:ExcelReadColumn>
                                              <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_687" Range="[LookWhere+&quot;:&quot;+StrWhere+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                              <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_63" SheetName="SupplyDemand" StartingCell="G1" />
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                      <Sequence DisplayName="Family" sap:VirtualizedContainerService.HintSize="839,853" sap2010:WorkflowViewState.IdRef="Sequence_5085">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="Family" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_316" Result="[LookFamily]" SheetName="Sheet1" Value="Family" />
                                        <If Condition="[LookFamily is Nothing]" DisplayName="Check Family" sap:VirtualizedContainerService.HintSize="797,634" sap2010:WorkflowViewState.IdRef="If_1187">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,364" sap2010:WorkflowViewState.IdRef="Sequence_5083">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:ExcelWriteCell Cell="H1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_87" SheetName="Sheet1" Text="Family" />
                                              <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="Hello I am SE SuperRobot&#xA;&#xA;Process JVN SC Shortage Material data Error, Column not found : Column Family&#xA;&#xA;Please ensure the name of column not change (same as per previous file), &#xA;punctuation marks (uppercase, lowercase, space, underscore, etc) on your excel file.&#xA;&#xA;Thank you&#xA;&#xA;Regards,&#xA;SE SuperRobot" Cc="Digital.Transformation@non.se.com;ApriyonoDwi.Indarto@se.com;aurore.masselot@se.com" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="SendOutlookMail_572" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="JVN SC Shortage Material Notification - Column Family Not Found" To="Sri.Bahaduri@se.com">
                                                <ui:SendOutlookMail.Files>
                                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                                    <InArgument x:TypeArguments="x:String" />
                                                  </scg:List>
                                                </ui:SendOutlookMail.Files>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:SendOutlookMail>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,477" sap2010:WorkflowViewState.IdRef="Sequence_5084">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1899">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[StrFamily]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookFamily,"\d", "")]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_332" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookFamily]">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:ExcelReadColumn>
                                              <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_688" Range="[LookFamily+&quot;:&quot;+StrFamily+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                              <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_64" SheetName="SupplyDemand" StartingCell="H1" />
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                      <Sequence DisplayName="SC/SNC" sap:VirtualizedContainerService.HintSize="839,853" sap2010:WorkflowViewState.IdRef="Sequence_5088">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="SC/SNC" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_317" Result="[LookSC]" SheetName="Sheet1" Value="SC/SNC" />
                                        <If Condition="[LookSC is Nothing]" DisplayName="Check SC/SNC" sap:VirtualizedContainerService.HintSize="797,634" sap2010:WorkflowViewState.IdRef="If_1188">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,364" sap2010:WorkflowViewState.IdRef="Sequence_5086">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:ExcelWriteCell Cell="I1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_88" SheetName="Sheet1" Text="SC/SNC" />
                                              <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="Hello I am SE SuperRobot&#xA;&#xA;Process JVN SC Shortage Material data Error, Column not found : Column SC/SNC&#xA;&#xA;Please ensure the name of column not change (same as per previous file), &#xA;punctuation marks (uppercase, lowercase, space, underscore, etc) on your excel file.&#xA;&#xA;Thank you&#xA;&#xA;Regards,&#xA;SE SuperRobot" Cc="Digital.Transformation@non.se.com;ApriyonoDwi.Indarto@se.com;aurore.masselot@se.com" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="SendOutlookMail_573" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="JVN SC Shortage Material Notification - Column SC/SNC Not Found" To="Sri.Bahaduri@se.com">
                                                <ui:SendOutlookMail.Files>
                                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                                    <InArgument x:TypeArguments="x:String" />
                                                  </scg:List>
                                                </ui:SendOutlookMail.Files>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:SendOutlookMail>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,477" sap2010:WorkflowViewState.IdRef="Sequence_5087">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1900">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[StrSC]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookSC,"\d", "")]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_333" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookSC]">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:ExcelReadColumn>
                                              <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_689" Range="[LookSC+&quot;:&quot;+StrSC+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                              <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_65" SheetName="SupplyDemand" StartingCell="I1" />
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                      <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="839,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_2" />
                                      <ui:ExcelReadRange Range="{x:Null}" AddHeaders="False" DataTable="[dtCsv]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="839,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_690" SheetName="SupplyDemand" />
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ExcelApplicationScope.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelApplicationScope>
                              <Sequence sap:VirtualizedContainerService.HintSize="915,444" sap2010:WorkflowViewState.IdRef="Sequence_5090">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1901">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[textReplace]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[GetPath1]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1902">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="s:String[]">[ReplaceText]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="s:String[]">[textReplace.Split("_"C)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:WriteCsvFile Encoding="{x:Null}" AddHeaders="False" DataTable="[dtCsv]" Delimitator="Comma" DisplayName="Write CSV" FilePath="[&quot;\\10.155.152.114\EMS_Upload\JVN SC SHORTAGE\JVN SC SHORTAGE &quot;+ReplaceText(1).ToString+&quot;.csv&quot;]" sap:VirtualizedContainerService.HintSize="334,152" sap2010:WorkflowViewState.IdRef="WriteCsvFile_194">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:WriteCsvFile>
                              </Sequence>
                              <ui:CopyFile ContinueOnError="{x:Null}" Destination="[&quot;\\10.155.152.114\EMS_Upload\JVN SC SHORTAGE\JVN SC SHORTAGE &quot;+ReplaceText(1).ToString+&quot;.xlsx&quot;]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="915,157" sap2010:WorkflowViewState.IdRef="CopyFile_379" Overwrite="True" Path="[subfileitem.ToString]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:CopyFile>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </ActivityAction>
                  </ui:ExcelApplicationScope.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelApplicationScope>
              </Sequence>
            </ActivityAction>
          </ui:ForEach.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEach>
      </Sequence>
    </FlowStep>
  </Flowchart>
</Activity>