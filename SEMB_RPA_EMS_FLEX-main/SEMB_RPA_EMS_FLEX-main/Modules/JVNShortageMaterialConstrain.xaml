<Activity mc:Ignorable="sap sap2010" x:Class="JVNShortageMaterialConstrain" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:bem="clr-namespace:BalaReva.EasyExcel.Main;assembly=BalaReva.EasyExcel" xmlns:bes="clr-namespace:BalaReva.EasyExcel.Sheets;assembly=BalaReva.EasyExcel" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:umab="clr-namespace:UiPath.Mail.Activities.Business;assembly=UiPath.Mail.Activities" xmlns:umabh="clr-namespace:UiPath.Mail.Activities.Business.HtmlEditor;assembly=UiPath.Mail.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="textReplace" Type="InOutArgument(x:String)" />
    <x:Property Name="ReplaceText" Type="OutArgument(s:String[])" />
    <x:Property Name="dtCsv" Type="InOutArgument(sd:DataTable)" />
  </x:Members>
  <sap:VirtualizedContainerService.HintSize>980,701</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="64">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>DocumentFormat.OpenXml.Spreadsheet</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>BalaReva.EasyExcel.Sheets</x:String>
      <x:String>BalaReva.EasyExcel.Base</x:String>
      <x:String>BalaReva.EasyExcel.Main</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>BalaReva.EasyExcel.Utilities</x:String>
      <x:String>UiPath.Core.Activities.TextModifications</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.Mail.Activities.Business.HtmlEditor</x:String>
      <x:String>UiPath.Mail.Activities.Business</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="64">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>DocumentFormat.OpenXml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>BalaReva.EasyExcel</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>BalaReva.Excel</AssemblyReference>
      <AssemblyReference>BalaReva.Excel.Base</AssemblyReference>
      <AssemblyReference>BalaReva.EasyExcel.Utilities</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>Box.V2</AssemblyReference>
      <AssemblyReference>UiPath.Box.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="JVN Shortage Material Constrain" sap:VirtualizedContainerService.HintSize="644,636" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:Int32" Name="intAddDays" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="GetSubFolder" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtCsv" />
      <Variable x:TypeArguments="s:String[]" Name="ReplaceText" />
      <Variable x:TypeArguments="x:String" Name="textReplace" />
      <Variable x:TypeArguments="x:Boolean" Name="MatchFPY" />
      <Variable x:TypeArguments="s:DateTime" Name="get_date" />
      <Variable x:TypeArguments="x:String" Name="GetPath1" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="SheetsWorkbook" />
      <Variable x:TypeArguments="x:Int32" Name="ErrorStatus" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt13" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt12" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
        <av:Point x:Key="ShapeLocation">20,32.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">80,70 169,70</av:PointCollection>
        <x:Double x:Key="Width">610</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID8</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">400,247</av:Point>
          <av:Size x:Key="ShapeSize">200,66</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="JVN Shortage Material Constrain" sap:VirtualizedContainerService.HintSize="911,11589" sap2010:WorkflowViewState.IdRef="Sequence_4953">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="LookRiskLevel" />
          <Variable x:TypeArguments="x:String" Name="StrRisk" />
          <Variable x:TypeArguments="scg:IEnumerable(x:Object)" Name="OutCol" />
          <Variable x:TypeArguments="x:String" Name="LookBuyer" />
          <Variable x:TypeArguments="x:String" Name="StrBuyer" />
          <Variable x:TypeArguments="x:String" Name="LookPart" />
          <Variable x:TypeArguments="x:String" Name="StrPart" />
          <Variable x:TypeArguments="x:String" Name="StrSupplier" />
          <Variable x:TypeArguments="x:String" Name="LookSupplier" />
          <Variable x:TypeArguments="x:String" Name="StrManuf" />
          <Variable x:TypeArguments="x:String" Name="LookManuf" />
          <Variable x:TypeArguments="x:String" Name="StrMPN" />
          <Variable x:TypeArguments="x:String" Name="LookMPN" />
          <Variable x:TypeArguments="x:String" Name="StrCommodity" />
          <Variable x:TypeArguments="x:String" Name="LookCommodity" />
          <Variable x:TypeArguments="x:String" Name="StrWhere" />
          <Variable x:TypeArguments="x:String" Name="LookWhere" />
          <Variable x:TypeArguments="x:String" Name="StrFamily" />
          <Variable x:TypeArguments="x:String" Name="LookFamily" />
          <Variable x:TypeArguments="x:String" Name="StrSC" />
          <Variable x:TypeArguments="x:String" Name="LookSC" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="Loop Files" sap:VirtualizedContainerService.HintSize="869,11497" sap2010:WorkflowViewState.IdRef="ForEach`1_227" Values="[GetSubFolder]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="x:Object">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:Object" Name="subfileitem" />
              </ActivityAction.Argument>
              <Sequence sap:VirtualizedContainerService.HintSize="833,11373" sap2010:WorkflowViewState.IdRef="Sequence_4955">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="791,60" sap2010:WorkflowViewState.IdRef="Assign_1859">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:DateTime">[get_date]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:DateTime">[IO.File.GetLastWriteTime(subfileitem.ToString)]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="791,60" sap2010:WorkflowViewState.IdRef="Assign_1860">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[GetPath1]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[Path.GetFileNameWithoutExtension(subfileitem.ToString)]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="791,11081" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_347" InstanceCachePeriod="3000" WorkbookPath="[subfileitem.ToString]">
                  <ui:ExcelApplicationScope.Body>
                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="757,10972" sap2010:WorkflowViewState.IdRef="Sequence_4956">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ExcelGetWorkbookSheets DisplayName="Search Supply Demand Sheet" sap:VirtualizedContainerService.HintSize="715,22" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_48" Sheets="[SheetsWorkbook]" />
                        <If Condition="[SheetsWorkbook.Where(Function(s) s Like &quot;SupplyDemand&quot;).ToList().Count &gt; 0]" sap:VirtualizedContainerService.HintSize="715,10818" sap2010:WorkflowViewState.IdRef="If_1173">
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="679,10642" sap2010:WorkflowViewState.IdRef="Sequence_4960">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="637,585" sap2010:WorkflowViewState.IdRef="ForEach`1_228" Values="[SheetsWorkbook.Where(Function(s) s Like &quot;SupplyDemand&quot;).ToList()]">
                                <ui:ForEach.Body>
                                  <ActivityAction x:TypeArguments="x:Object">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="x:Object" Name="itemSheets" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,462" sap2010:WorkflowViewState.IdRef="Sequence_4957">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey 'excel.exe JVN'" sap:VirtualizedContainerService.HintSize="334,152" sap2010:WorkflowViewState.IdRef="SendHotkey_124" Key="L" KeyModifiers="Ctrl, Shift">
                                        <ui:SendHotkey.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="e7163ef3-6ac4-42d8-9a3e-2acd50513e1a" InformativeScreenshot="3bddfd394d2ae042da16642cd859dc3e" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='* - Excel' /&gt;&lt;ctrl name='*' role='client' /&gt;">
                                            <ui:Target.TimeoutMS>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:Target.TimeoutMS>
                                            <ui:Target.WaitForReady>
                                              <InArgument x:TypeArguments="ui:WaitForReady" />
                                            </ui:Target.WaitForReady>
                                          </ui:Target>
                                        </ui:SendHotkey.Target>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:SendHotkey>
                                      <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="LookUp Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_304" Result="[LookBuyer]" SheetName="[itemSheets.ToString]" Value="Buyer Name" />
                                      <If Condition="[LookBuyer &lt;&gt; Nothing]" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="If_1174">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376,506" sap2010:WorkflowViewState.IdRef="Sequence_4958">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_677" Range="[LookBuyer]" SheetName="[itemSheets.ToString]" />
                                            <ui:FilterDataTable DataTable="[dt13]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="334,160" sap2010:WorkflowViewState.IdRef="FilterDataTable_168" OutputDataTable="[dt13]" SelectColumnsMode="Keep">
                                              <ui:FilterDataTable.Filters>
                                                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                                  <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                                    <ui:FilterOperationArgument.Column>
                                                      <InArgument x:TypeArguments="x:String">["1"]</InArgument>
                                                    </ui:FilterOperationArgument.Column>
                                                    <ui:FilterOperationArgument.Operand>
                                                      <InArgument x:TypeArguments="x:String">["Balance"]</InArgument>
                                                    </ui:FilterOperationArgument.Operand>
                                                  </ui:FilterOperationArgument>
                                                </scg:List>
                                              </ui:FilterDataTable.Filters>
                                              <ui:FilterDataTable.SelectColumns>
                                                <scg:List x:TypeArguments="InArgument" Capacity="4">
                                                  <x:Null />
                                                </scg:List>
                                              </ui:FilterDataTable.SelectColumns>
                                            </ui:FilterDataTable>
                                            <ui:WriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteRange_512" SheetName="Sheet1" StartingCell="A1" WorkbookPath="[&quot;C:\Users\SESA494506\Pictures\New folder\&quot;+GetPath1+&quot;.xlsx&quot;]" />
                                          </Sequence>
                                        </If.Then>
                                      </If>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ForEach.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ForEach>
                              <bem:ExcelScope FilePassword="{x:Null}" ModifyPassword="{x:Null}" DisplayAlerts="False" DisplayName="Excel Scope" FilePath="[&quot;C:\Users\SESA494506\Pictures\New folder\&quot;+GetPath1+&quot;.xlsx&quot;]" sap:VirtualizedContainerService.HintSize="637,51" sap2010:WorkflowViewState.IdRef="ExcelScope_97" UpdateAutoLinks="Default" Visible="False">
                                <bem:ExcelScope.Body>
                                  <ActivityAction x:TypeArguments="bem:ExcelParam">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="bem:ExcelParam" Name="WorkBookObj" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="242,176" sap2010:WorkflowViewState.IdRef="Sequence_4959">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <bes:FindReplace ExecutionResult="{x:Null}" Output="{x:Null}" ContinueOnError="True" Delay="3" DisplayName="Find &amp; Replace" FindOption="Part" FindText="," sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="FindReplace_111" MatchCase="False" ReplaceText=";" SheetName="Sheet1">
                                        <bes:FindReplace.CellRange>
                                          <InArgument x:TypeArguments="x:String">
                                            <Literal x:TypeArguments="x:String" Value="" />
                                          </InArgument>
                                        </bes:FindReplace.CellRange>
                                      </bes:FindReplace>
                                      <bes:FindReplace ExecutionResult="{x:Null}" Output="{x:Null}" ContinueOnError="True" Delay="3" DisplayName="Find &amp; Replace" FindOption="Part" FindText=";" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="FindReplace_112" MatchCase="False" SheetName="Sheet1">
                                        <bes:FindReplace.CellRange>
                                          <InArgument x:TypeArguments="x:String">
                                            <Literal x:TypeArguments="x:String" Value="" />
                                          </InArgument>
                                        </bes:FindReplace.CellRange>
                                        <bes:FindReplace.ReplaceText>
                                          <InArgument x:TypeArguments="x:String">
                                            <Literal x:TypeArguments="x:String" Value="" />
                                          </InArgument>
                                        </bes:FindReplace.ReplaceText>
                                      </bes:FindReplace>
                                    </Sequence>
                                  </ActivityAction>
                                </bem:ExcelScope.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </bem:ExcelScope>
                              <ui:KillProcess AppliesTo="{x:Null}" ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="637,132" sap2010:WorkflowViewState.IdRef="KillProcess_4" ProcessName="EXCEL" />
                              <Delay Duration="00:00:10" sap:VirtualizedContainerService.HintSize="637,22" sap2010:WorkflowViewState.IdRef="Delay_4" />
                              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="637,8912" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_348" InstanceCachePeriod="3000" WorkbookPath="[&quot;C:\Users\sesa494506\Pictures\New folder\&quot;+GetPath1+&quot;.xlsx&quot;]">
                                <ui:ExcelApplicationScope.Body>
                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="603,8803" sap2010:WorkflowViewState.IdRef="Sequence_4961">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Sequence DisplayName="Risk Level" sap:VirtualizedContainerService.HintSize="561,442" sap2010:WorkflowViewState.IdRef="Sequence_4991">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="Risk Level" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_315" Result="[LookRiskLevel]" SheetName="Sheet1" Value="Risk Level" />
                                        <If Condition="[LookRiskLevel is Nothing]" DisplayName="Check Risk Level" sap:VirtualizedContainerService.HintSize="484,223" sap2010:WorkflowViewState.IdRef="If_1185">
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_4993">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_1887">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[StrRisk]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookRiskLevel,"\d", "")]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_334" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookRiskLevel]" />
                                              <ui:ExcelReadRange AddHeaders="True" DataTable="[dt12]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_688" Range="[LookRiskLevel+&quot;:&quot;+StrRisk+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                              <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt12]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_66" SheetName="SupplyDemand" StartingCell="J1" />
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                      <Sequence DisplayName="Buyer Name" sap:VirtualizedContainerService.HintSize="561,859" sap2010:WorkflowViewState.IdRef="Sequence_4994">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="Buyer Name" sap:VirtualizedContainerService.HintSize="519,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_316" Result="[LookBuyer]" SheetName="Sheet1" Value="Buyer Name" />
                                        <If Condition="[LookBuyer is Nothing]" DisplayName="Check Buyer Name" sap:VirtualizedContainerService.HintSize="519.2,640" sap2010:WorkflowViewState.IdRef="If_1186">
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="375.2,480.8" sap2010:WorkflowViewState.IdRef="Sequence_4996">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_1888">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[StrBuyer]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookBuyer,"\d","")]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_335" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookBuyer]" />
                                              <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_689" Range="[LookBuyer+&quot;:&quot;+StrBuyer+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                              <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_67" SheetName="SupplyDemand" StartingCell="A1" />
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                      <Sequence DisplayName="Part" sap:VirtualizedContainerService.HintSize="560.8,860.8" sap2010:WorkflowViewState.IdRef="Sequence_4997">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="Part" sap:VirtualizedContainerService.HintSize="519.2,88" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_317" Result="[LookPart]" SheetName="Sheet1" Value="Part" />
                                        <If Condition="[LookPart is Nothing]" DisplayName="Check Part" sap:VirtualizedContainerService.HintSize="519.2,640" sap2010:WorkflowViewState.IdRef="If_1187">
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="375.2,480.8" sap2010:WorkflowViewState.IdRef="Sequence_4999">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_1889">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[StrPart]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookPart,"\d","")]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_336" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookPart]" />
                                              <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_690" Range="[LookPart+&quot;:&quot;+StrPart+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                              <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_68" SheetName="SupplyDemand" StartingCell="B1" />
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                      <Sequence DisplayName="Supplier" sap:VirtualizedContainerService.HintSize="560.8,860.8" sap2010:WorkflowViewState.IdRef="Sequence_5000">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="Supplier" sap:VirtualizedContainerService.HintSize="519.2,88" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_318" Result="[LookSupplier]" SheetName="Sheet1" Value="Supplier" />
                                        <If Condition="[LookSupplier is Nothing]" DisplayName="Check Supplier" sap:VirtualizedContainerService.HintSize="519.2,640" sap2010:WorkflowViewState.IdRef="If_1188">
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="375.2,480.8" sap2010:WorkflowViewState.IdRef="Sequence_5002">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_1890">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[StrSupplier]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookSupplier,"\d","")]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_337" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookSupplier]" />
                                              <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_691" Range="[LookSupplier+&quot;:&quot;+StrSupplier+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                              <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_69" SheetName="SupplyDemand" StartingCell="C1" />
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                      <Sequence DisplayName="Manufacturer" sap:VirtualizedContainerService.HintSize="560.8,860.8" sap2010:WorkflowViewState.IdRef="Sequence_5003">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="Manufacturer" sap:VirtualizedContainerService.HintSize="519.2,88" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_319" Result="[LookManuf]" SheetName="Sheet1" Value="Manufacturer" />
                                        <If Condition="[LookManuf is Nothing]" DisplayName="Check Manufacturer" sap:VirtualizedContainerService.HintSize="519.2,640" sap2010:WorkflowViewState.IdRef="If_1189">
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="375.2,480.8" sap2010:WorkflowViewState.IdRef="Sequence_5005">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_1891">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[StrManuf]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookManuf,"\d","")]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_338" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookManuf]" />
                                              <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_692" Range="[LookManuf+&quot;:&quot;+StrManuf+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                              <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_70" SheetName="SupplyDemand" StartingCell="D1" />
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                      <Sequence DisplayName="MPN" sap:VirtualizedContainerService.HintSize="560.8,860.8" sap2010:WorkflowViewState.IdRef="Sequence_5006">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="MPN" sap:VirtualizedContainerService.HintSize="519.2,88" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_320" Result="[LookMPN]" SheetName="Sheet1" Value="MPN" />
                                        <If Condition="[LookMPN is Nothing]" DisplayName="Check MPN" sap:VirtualizedContainerService.HintSize="519.2,640" sap2010:WorkflowViewState.IdRef="If_1190">
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="375.2,480.8" sap2010:WorkflowViewState.IdRef="Sequence_5008">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_1892">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[StrMPN]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookMPN,"\d","")]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_339" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookMPN]" />
                                              <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_693" Range="[LookMPN+&quot;:&quot;+StrMPN+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                              <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_71" SheetName="SupplyDemand" StartingCell="E1" />
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                      <Sequence sap:VirtualizedContainerService.HintSize="560.8,860.8" sap2010:WorkflowViewState.IdRef="Sequence_5009">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="LookUp Range" sap:VirtualizedContainerService.HintSize="519.2,88" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_321" Result="[LookCommodity]" SheetName="Sheet1" Value="Commodity" />
                                        <If Condition="[LookCommodity is Nothing]" sap:VirtualizedContainerService.HintSize="519.2,640" sap2010:WorkflowViewState.IdRef="If_1191">
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="375.2,480.8" sap2010:WorkflowViewState.IdRef="Sequence_5011">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_1893">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[StrCommodity]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookCommodity,"\d","")]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_340" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookCommodity]" />
                                              <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_694" Range="[LookCommodity+&quot;:&quot;+StrCommodity+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                              <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_72" SheetName="SupplyDemand" StartingCell="F1" />
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                      <Sequence sap:VirtualizedContainerService.HintSize="560.8,860.8" sap2010:WorkflowViewState.IdRef="Sequence_5012">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="LookUp Range" sap:VirtualizedContainerService.HintSize="519.2,88" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_322" Result="[LookWhere]" SheetName="Sheet1" Value="Where Use" />
                                        <If Condition="[LookWhere is Nothing]" sap:VirtualizedContainerService.HintSize="519.2,640" sap2010:WorkflowViewState.IdRef="If_1192">
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="375.2,480.8" sap2010:WorkflowViewState.IdRef="Sequence_5014">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_1894">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[StrWhere]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookWhere,"\d","")]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_341" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookWhere]" />
                                              <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_695" Range="[LookWhere+&quot;:&quot;+StrWhere+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                              <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_73" SheetName="SupplyDemand" StartingCell="G1" />
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                      <Sequence sap:VirtualizedContainerService.HintSize="560.8,860.8" sap2010:WorkflowViewState.IdRef="Sequence_5015">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="LookUp Range" sap:VirtualizedContainerService.HintSize="519.2,88" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_323" Result="[LookFamily]" SheetName="Sheet1" Value="Family" />
                                        <If Condition="[LookFamily is Nothing]" sap:VirtualizedContainerService.HintSize="519.2,640" sap2010:WorkflowViewState.IdRef="If_1193">
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="375.2,480.8" sap2010:WorkflowViewState.IdRef="Sequence_5017">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_1895">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[StrFamily]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookFamily,"\d","")]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_342" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookFamily]" />
                                              <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_696" Range="[LookFamily+&quot;:&quot;+StrFamily+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                              <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_74" SheetName="SupplyDemand" StartingCell="H1" />
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                      <Sequence sap:VirtualizedContainerService.HintSize="560.8,860.8" sap2010:WorkflowViewState.IdRef="Sequence_5018">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="LookUp Range" sap:VirtualizedContainerService.HintSize="519.2,88" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_324" Result="[LookSC]" SheetName="Sheet1" Value="SC/SNC" />
                                        <If Condition="[LookSC is Nothing]" sap:VirtualizedContainerService.HintSize="519.2,640" sap2010:WorkflowViewState.IdRef="If_1194">
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="375.2,480.8" sap2010:WorkflowViewState.IdRef="Sequence_5020">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_1896">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[StrSC]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookSC,"\d","")]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_343" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookSC]" />
                                              <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_697" Range="[LookSC+&quot;:&quot;+StrSC+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                              <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_75" SheetName="SupplyDemand" StartingCell="I1" />
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                      <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="560.8,22.4" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_1" />
                                      <ui:ExcelReadRange Range="{x:Null}" AddHeaders="False" DataTable="[dtCsv]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="560.8,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_698" SheetName="SupplyDemand" />
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ExcelApplicationScope.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelApplicationScope>
                              <Sequence sap:VirtualizedContainerService.HintSize="636,448" sap2010:WorkflowViewState.IdRef="Sequence_5021">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="433.6,60" sap2010:WorkflowViewState.IdRef="Assign_1897">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[textReplace]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[GetPath1]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="433.6,60" sap2010:WorkflowViewState.IdRef="Assign_1898">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="s:String[]">[ReplaceText]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="s:String[]">[textReplace.Split("_"C)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:WriteCsvFile Encoding="{x:Null}" AddHeaders="False" DataTable="[dtCsv]" Delimitator="Comma" DisplayName="Write CSV" FilePath="[&quot;\\10.155.152.114\EMS_Upload\JVN SC SHORTAGE CONSTRAINT\JVN SC SHORTAGE CONSTRAINT &quot;+ReplaceText(2).ToString+&quot;.csv&quot;]" sap:VirtualizedContainerService.HintSize="433.6,155.2" sap2010:WorkflowViewState.IdRef="WriteCsvFile_1" />
                              </Sequence>
                              <ui:CopyFile ContinueOnError="{x:Null}" Destination="[&quot;\\10.155.152.114\EMS_Upload\JVN SC SHORTAGE CONSTRAINT\JVN SC SHORTAGE CONSTRAINT &quot;+ReplaceText(2).ToString+&quot;.xlsx&quot;]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="636,160" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="[subfileitem.ToString]" />
                            </Sequence>
                          </If.Then>
                        </If>
                      </Sequence>
                    </ActivityAction>
                  </ui:ExcelApplicationScope.Body>
                </ui:ExcelApplicationScope>
              </Sequence>
            </ActivityAction>
          </ui:ForEach.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEach>
      </Sequence>
    </FlowStep>
    <FlowStep x:Name="__ReferenceID8">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">169,38</av:Point>
          <av:Size x:Key="ShapeSize">262,64</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300.2,102 300.2,132 300,132 300,153.6</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="262,64" sap2010:WorkflowViewState.IdRef="Assign_1874">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:List(x:String)">[GetSubFolder]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:List(x:String)" xml:space="preserve">[directory.GetFiles("C:\Users\"+Environment.UserName+"\Box\EMS Control Tower\JVN DATA\Supply Chain\Shortage Material","*Schneider_Constraint_*"+Now.ToString("yyyy")+"*"
).Where(Function(x) New FileInfo(x).LastModifiedDate &gt; Now.AddDays(intAddDays - 7).ToShortDateString And New FileInfo(x).LastModifiedDate &lt;= Now.AddDays(intAddDays).ToShortDateString
).OrderByDescending(Function(d) New FileInfo(d).CreationTime).ToList]</InArgument>
        </Assign.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Assign>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID7">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">200,153.6</av:Point>
              <av:Size x:Key="ShapeSize">200,51</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">300,204.6 300,236.5</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:CommentOut sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="CommentOut_1">
            <ui:CommentOut.Body>
              <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_5067">
                <Flowchart DisplayName="Checking Excel" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="Flowchart_2">
                  <Flowchart.Variables>
                    <Variable x:TypeArguments="x:Int32" Default="0" Name="intIndex" />
                    <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="listEmail" />
                    <Variable x:TypeArguments="sd:DataTable" Name="dtFileChecking" />
                  </Flowchart.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <av:Point x:Key="ShapeLocation">0,2.4</av:Point>
                      <av:Size x:Key="ShapeSize">60,75.2</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">60,40 90,40 90,40.42 160,40.42</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Flowchart.StartNode>
                    <x:Reference>__ReferenceID3</x:Reference>
                  </Flowchart.StartNode>
                  <FlowStep x:Name="__ReferenceID0">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:Point x:Key="ShapeLocation">370,264.5</av:Point>
                        <av:Size x:Key="ShapeSize">200,52.8</av:Size>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If Condition="[listEmail.Item(0).DateAsDateTime.ToShortDateString &lt;&gt; Now.ToShortDateString]" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="If_1198">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <If Condition="[dtFileChecking.Rows.Count &gt; 1]" sap:VirtualizedContainerService.HintSize="512,606" sap2010:WorkflowViewState.IdRef="If_1197">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="476,429" sap2010:WorkflowViewState.IdRef="Sequence_5027">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:String" Name="strMail" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <umab:CreateHtmlContent DisplayName="Create HTML Content" sap:VirtualizedContainerService.HintSize="434,152" HtmlContent="[strMail]" sap2010:WorkflowViewState.IdRef="CreateHtmlContent_1">
                                <umab:CreateHtmlContent.HtmlContentArg>
                                  <umabh:HtmlContentArgument FilePath=".data/HtmlContent0.html">
                                    <umabh:HtmlContentArgument.RuntimeImages>
                                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                    </umabh:HtmlContentArgument.RuntimeImages>
                                    <umabh:HtmlContentArgument.ValueMappings>
                                      <scg:List x:TypeArguments="umabh:HtmlValueMappingBase" Capacity="4">
                                        <umabh:HtmlTableValueMapping Name="Table" Value="[dtFileChecking]" />
                                      </scg:List>
                                    </umabh:HtmlContentArgument.ValueMappings>
                                  </umabh:HtmlContentArgument>
                                </umab:CreateHtmlContent.HtmlContentArg>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </umab:CreateHtmlContent>
                              <ui:SendOutlookMail Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Account="digital.transformation@non.se.com" Body="[strMail]" Cc="ApriyonoDwi.Indarto@se.com" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="434,145" sap2010:WorkflowViewState.IdRef="SendOutlookMail_593" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" Subject="JVN SC CTB Notification" To="digital.transformationinternship@non.se.com">
                                <ui:SendOutlookMail.Files>
                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                    <InArgument x:TypeArguments="x:String" />
                                  </scg:List>
                                </ui:SendOutlookMail.Files>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:SendOutlookMail>
                            </Sequence>
                          </If.Then>
                        </If>
                      </If.Then>
                    </If>
                  </FlowStep>
                  <FlowStep x:Name="__ReferenceID1">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:Point x:Key="ShapeLocation">370,179</av:Point>
                        <av:Size x:Key="ShapeSize">200,22.4</av:Size>
                        <av:PointCollection x:Key="ConnectorLocation">470,201 470,264.5</av:PointCollection>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:GetOutlookMailMessages FilterByMessageIds="{x:Null}" TimeoutMS="{x:Null}" Account="digital.transformation@non.se.com" DisplayName="Get Outlook Mail Messages" Filter="@SQL=urn:schemas:httpmail:subject LIKE '%JVN SC SHIPMENT Notification%'" GetAttachements="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_1" MailFolder="Sent Items" MarkAsRead="False" Messages="[listEmail]" OnlyUnreadMessages="False" OrderByDate="NewestFirst" Top="1" />
                    <FlowStep.Next>
                      <x:Reference>__ReferenceID0</x:Reference>
                    </FlowStep.Next>
                  </FlowStep>
                  <FlowDecision x:Name="__ReferenceID2" Condition="[dtFileChecking.Rows.Count &lt;= 0]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79.2,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <av:Point x:Key="ShapeLocation">220.5,146.5</av:Point>
                        <av:Size x:Key="ShapeSize">79.2,87.2</av:Size>
                        <av:PointCollection x:Key="FalseConnector">299.5,190 370,190</av:PointCollection>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <FlowDecision.False>
                      <x:Reference>__ReferenceID1</x:Reference>
                    </FlowDecision.False>
                  </FlowDecision>
                  <FlowStep x:Name="__ReferenceID3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:Point x:Key="ShapeLocation">160,14.02</av:Point>
                        <av:Size x:Key="ShapeSize">200,52.8</av:Size>
                        <av:PointCollection x:Key="ConnectorLocation">260,66.82 260,96.82 260.1,96.82 260.1,146.5</av:PointCollection>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="771.2,1220" sap2010:WorkflowViewState.IdRef="ForEach`1_230" Values="[GetSubFolder]">
                      <ui:ForEach.Body>
                        <ActivityAction x:TypeArguments="x:String">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                          </ActivityAction.Argument>
                          <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" DisplayName="Checking Sheet and Column" sap:VirtualizedContainerService.HintSize="736,1095.2" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_349" InstanceCachePeriod="3000" ReadOnly="True" Visible="False" WorkbookPath="[item]">
                            <ui:ExcelApplicationScope.Body>
                              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="702.4,985.6" sap2010:WorkflowViewState.IdRef="Sequence_5026">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="x:String" Name="strNotification" />
                                    <Variable x:TypeArguments="x:String" Name="strMail" />
                                    <Variable x:TypeArguments="s:String[]" Default="[new String(){&quot;Part&quot;,&quot;BU&quot;,&quot;Future&quot;}]" Name="listColumnName" />
                                    <Variable x:TypeArguments="x:String" Name="strSheetNameLower" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:BuildDataTable DataTable="[dtFileChecking]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="660.8,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Column_x0020__x002F__x0020_Sheets&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Status&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Notes&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;FileName&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:BuildDataTable>
                                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[new String(){&quot;Column/Sheet&quot;, &quot;Status&quot;, &quot;Notes&quot;,&quot;FileName&quot;}]" DataTable="[dtFileChecking]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="660.8,188" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
                                  <ui:ExcelGetWorkbookSheets DisplayName="Get Workbook Sheets" sap:VirtualizedContainerService.HintSize="660.8,22.4" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_49" Sheets="[SheetsWorkbook]" />
                                  <If Condition="[SheetsWorkbook.Where(Function(s) s Like &quot;SupplyDemand&quot;).ToList().Count = 0]" sap:VirtualizedContainerService.HintSize="660.8,502.4" sap2010:WorkflowViewState.IdRef="If_1196">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <Sequence sap:VirtualizedContainerService.HintSize="375.2,343.2" sap2010:WorkflowViewState.IdRef="Sequence_5022">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[new String(){&quot;Detail&quot;, &quot;Not Exist&quot;, &quot;Sheets Doesn't Exist&quot;,Path.GetFileName(item)}]" DataTable="[dtFileChecking]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="333.6,188" sap2010:WorkflowViewState.IdRef="AddDataRow_2" />
                                        <RemoveFromCollection x:TypeArguments="x:String" Collection="[GetSubFolder]" DisplayName="Remove From Collection" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="RemoveFromCollection`1_1" Item="[item]" />
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence sap:VirtualizedContainerService.HintSize="241.6,208" sap2010:WorkflowViewState.IdRef="Sequence_5025">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="Check Require Column" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="ForEach`1_229" Values="[listColumnName]">
                                          <ui:ForEach.Body>
                                            <ActivityAction x:TypeArguments="x:String">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                                              </ActivityAction.Argument>
                                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="524.8,780.8" sap2010:WorkflowViewState.IdRef="Sequence_5024">
                                                <Sequence.Variables>
                                                  <Variable x:TypeArguments="x:String" Name="strResult" />
                                                </Sequence.Variables>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="LookUp Range" sap:VirtualizedContainerService.HintSize="483.2,88" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_325" Result="[strResult]" SheetName="CTB" Value="[item]" />
                                                <If Condition="[strResult = &quot;&quot;]" sap:VirtualizedContainerService.HintSize="483.2,460" sap2010:WorkflowViewState.IdRef="If_1195">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <If.Then>
                                                    <Sequence sap:VirtualizedContainerService.HintSize="375.2,280.8" sap2010:WorkflowViewState.IdRef="Sequence_5023">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[new String(){item, &quot;Not Exist&quot;, &quot;Column Doesn't Exist&quot;,Path.GetFileName(item)}]" DataTable="[dtFileChecking]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="333.6,188" sap2010:WorkflowViewState.IdRef="AddDataRow_3" />
                                                    </Sequence>
                                                  </If.Then>
                                                </If>
                                                <Assign sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_1899">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[strResult]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">
                                                      <Literal x:TypeArguments="x:String" Value="" />
                                                    </InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </Sequence>
                                            </ActivityAction>
                                          </ui:ForEach.Body>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:ForEach>
                                        <RemoveFromCollection x:TypeArguments="x:String" Collection="[GetSubFolder]" DisplayName="Remove From Collection" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="RemoveFromCollection`1_2" Item="[item]" />
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                </Sequence>
                              </ActivityAction>
                            </ui:ExcelApplicationScope.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:ExcelApplicationScope>
                        </ActivityAction>
                      </ui:ForEach.Body>
                    </ui:ForEach>
                    <FlowStep.Next>
                      <x:Reference>__ReferenceID2</x:Reference>
                    </FlowStep.Next>
                  </FlowStep>
                </Flowchart>
              </Sequence>
            </ui:CommentOut.Body>
          </ui:CommentOut>
          <FlowStep.Next>
            <FlowDecision x:Name="__ReferenceID5" Condition="[GetSubFolder.Count=0]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <av:Point x:Key="ShapeLocation">260.5,236.5</av:Point>
                  <av:Size x:Key="ShapeSize">79,87</av:Size>
                  <av:PointCollection x:Key="FalseConnector">339.5,280 400,280</av:PointCollection>
                  <av:PointCollection x:Key="TrueConnector">260.5,280.1 230.5,280.1 230.5,280.9 200,280.9</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <FlowDecision.True>
                <FlowStep x:Name="__ReferenceID6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">0,254.5</av:Point>
                      <av:Size x:Key="ShapeSize">200,51</av:Size>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;End&quot;]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                </FlowStep>
              </FlowDecision.True>
              <FlowDecision.False>
                <x:Reference>__ReferenceID4</x:Reference>
              </FlowDecision.False>
            </FlowDecision>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID6</x:Reference>
    <x:Reference>__ReferenceID7</x:Reference>
    <FlowStep>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">10,495.6</av:Point>
          <av:Size x:Key="ShapeSize">200,66</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="JVN Shortage Material Constrain" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_5066">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="LookRiskLevel" />
          <Variable x:TypeArguments="x:String" Name="StrRisk" />
          <Variable x:TypeArguments="scg:IEnumerable(x:Object)" Name="OutCol" />
          <Variable x:TypeArguments="x:String" Name="LookBuyer" />
          <Variable x:TypeArguments="x:String" Name="StrBuyer" />
          <Variable x:TypeArguments="x:String" Name="LookPart" />
          <Variable x:TypeArguments="x:String" Name="StrPart" />
          <Variable x:TypeArguments="x:String" Name="StrSupplier" />
          <Variable x:TypeArguments="x:String" Name="LookSupplier" />
          <Variable x:TypeArguments="x:String" Name="StrManuf" />
          <Variable x:TypeArguments="x:String" Name="LookManuf" />
          <Variable x:TypeArguments="x:String" Name="StrMPN" />
          <Variable x:TypeArguments="x:String" Name="LookMPN" />
          <Variable x:TypeArguments="x:String" Name="StrCommodity" />
          <Variable x:TypeArguments="x:String" Name="LookCommodity" />
          <Variable x:TypeArguments="x:String" Name="StrWhere" />
          <Variable x:TypeArguments="x:String" Name="LookWhere" />
          <Variable x:TypeArguments="x:String" Name="StrFamily" />
          <Variable x:TypeArguments="x:String" Name="LookFamily" />
          <Variable x:TypeArguments="x:String" Name="StrSC" />
          <Variable x:TypeArguments="x:String" Name="LookSC" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="Loop Files" sap:VirtualizedContainerService.HintSize="1486.4,12622.4" sap2010:WorkflowViewState.IdRef="ForEach`1_232" Values="[GetSubFolder]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="x:Object">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:Object" Name="subfileitem" />
              </ActivityAction.Argument>
              <Sequence sap:VirtualizedContainerService.HintSize="1451.2,12497.6" sap2010:WorkflowViewState.IdRef="Sequence_5065">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="1409.6,60" sap2010:WorkflowViewState.IdRef="Assign_1900">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:DateTime">[get_date]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:DateTime">[IO.File.GetLastWriteTime(subfileitem.ToString)]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="1409.6,60" sap2010:WorkflowViewState.IdRef="Assign_1901">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[GetPath1]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[Path.GetFileNameWithoutExtension(subfileitem.ToString)]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="1409.6,12204.8" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_351" InstanceCachePeriod="3000" WorkbookPath="[subfileitem.ToString]">
                  <ui:ExcelApplicationScope.Body>
                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1376,12095.2" sap2010:WorkflowViewState.IdRef="Sequence_5064">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ExcelGetWorkbookSheets DisplayName="Search Supply Demand Sheet" sap:VirtualizedContainerService.HintSize="1334.4,22.4" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_50" Sheets="[SheetsWorkbook]" />
                        <If Condition="[SheetsWorkbook.Where(Function(s) s Like &quot;SupplyDemand&quot;).ToList().Count = 0]" sap:VirtualizedContainerService.HintSize="1334.4,11940" sap2010:WorkflowViewState.IdRef="If_1210">
                          <If.Then>
                            <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="Hello I am SE SuperRobot&#xA;&#xA;Process JVN SC Shortage Material Constrain data Error, Sheet not found : Sheet SupplyDemand.&#xA;&#xA;Please ensure the name of sheet not change (same as per previous file), &#xA;punctuation marks (uppercase, lowercase, space, underscore, etc) on your excel file.&#xA;&#xA;Thank you&#xA;&#xA;Regards,&#xA;SE SuperRobot" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="333.6,146.4" sap2010:WorkflowViewState.IdRef="SendOutlookMail_594" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="JVN SC Shortage Material Constrain Notification - Sheet SupplyDemand Not Found" To="Sri.Bahaduri@se.com">
                              <ui:SendOutlookMail.Files>
                                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                              </ui:SendOutlookMail.Files>
                            </ui:SendOutlookMail>
                          </If.Then>
                          <If.Else>
                            <Sequence sap:VirtualizedContainerService.HintSize="956.8,11780.8" sap2010:WorkflowViewState.IdRef="Sequence_5063">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="915.2,1124" sap2010:WorkflowViewState.IdRef="ForEach`1_231" Values="[SheetsWorkbook.Where(Function(s) s Like &quot;SupplyDemand&quot;).ToList()]">
                                <ui:ForEach.Body>
                                  <ActivityAction x:TypeArguments="x:Object">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="x:Object" Name="itemSheets" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="524.8,999.2" sap2010:WorkflowViewState.IdRef="Sequence_5029">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey 'excel.exe JVN'" sap:VirtualizedContainerService.HintSize="483.2,154.4" sap2010:WorkflowViewState.IdRef="SendHotkey_125" Key="L" KeyModifiers="Ctrl, Shift">
                                        <ui:SendHotkey.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="e7163ef3-6ac4-42d8-9a3e-2acd50513e1a" InformativeScreenshot="3bddfd394d2ae042da16642cd859dc3e" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='* - Excel' /&gt;&lt;ctrl name='*' role='client' /&gt;">
                                            <ui:Target.TimeoutMS>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:Target.TimeoutMS>
                                            <ui:Target.WaitForReady>
                                              <InArgument x:TypeArguments="ui:WaitForReady" />
                                            </ui:Target.WaitForReady>
                                          </ui:Target>
                                        </ui:SendHotkey.Target>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:SendHotkey>
                                      <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="LookUp Range" sap:VirtualizedContainerService.HintSize="483.2,88" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_326" Result="[LookBuyer]" SheetName="[itemSheets.ToString]" Value="Buyer Name" />
                                      <If Condition="[LookBuyer &lt;&gt; Nothing]" sap:VirtualizedContainerService.HintSize="483.2,584" sap2010:WorkflowViewState.IdRef="If_1199">
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376,405" sap2010:WorkflowViewState.IdRef="Sequence_5028">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_699" Range="[LookBuyer]" SheetName="[itemSheets.ToString]" />
                                            <ui:FilterDataTable DataTable="[dt13]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_169" OutputDataTable="[dt13]" SelectColumnsMode="Keep">
                                              <ui:FilterDataTable.Filters>
                                                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                                  <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                                    <ui:FilterOperationArgument.Column>
                                                      <InArgument x:TypeArguments="x:String">["1"]</InArgument>
                                                    </ui:FilterOperationArgument.Column>
                                                    <ui:FilterOperationArgument.Operand>
                                                      <InArgument x:TypeArguments="x:String">["Balance"]</InArgument>
                                                    </ui:FilterOperationArgument.Operand>
                                                  </ui:FilterOperationArgument>
                                                </scg:List>
                                              </ui:FilterDataTable.Filters>
                                              <ui:FilterDataTable.SelectColumns>
                                                <scg:List x:TypeArguments="InArgument" Capacity="4">
                                                  <x:Null />
                                                </scg:List>
                                              </ui:FilterDataTable.SelectColumns>
                                            </ui:FilterDataTable>
                                            <ui:WriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteRange_513" SheetName="Sheet1" StartingCell="A1" WorkbookPath="[&quot;C:\Users\SESA494506\Pictures\New folder\&quot;+GetPath1+&quot;.xlsx&quot;]" />
                                          </Sequence>
                                        </If.Then>
                                      </If>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ForEach.Body>
                              </ui:ForEach>
                              <bem:ExcelScope FilePassword="{x:Null}" ModifyPassword="{x:Null}" DisplayAlerts="False" DisplayName="Excel Scope" FilePath="[&quot;C:\Users\SESA494506\Pictures\New folder\&quot;+GetPath1+&quot;.xlsx&quot;]" sap:VirtualizedContainerService.HintSize="915,317" sap2010:WorkflowViewState.IdRef="ExcelScope_98" UpdateAutoLinks="Default" Visible="False">
                                <bem:ExcelScope.Body>
                                  <ActivityAction x:TypeArguments="bem:ExcelParam">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="bem:ExcelParam" Name="WorkBookObj" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="242,176" sap2010:WorkflowViewState.IdRef="Sequence_5030">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <bes:FindReplace ExecutionResult="{x:Null}" Output="{x:Null}" ContinueOnError="True" Delay="3" DisplayName="Find &amp; Replace" FindOption="Part" FindText="," sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="FindReplace_113" MatchCase="False" ReplaceText=";" SheetName="Sheet1">
                                        <bes:FindReplace.CellRange>
                                          <InArgument x:TypeArguments="x:String">
                                            <Literal x:TypeArguments="x:String" Value="" />
                                          </InArgument>
                                        </bes:FindReplace.CellRange>
                                      </bes:FindReplace>
                                      <bes:FindReplace ExecutionResult="{x:Null}" Output="{x:Null}" ContinueOnError="True" Delay="3" DisplayName="Find &amp; Replace" FindOption="Part" FindText=";" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="FindReplace_114" MatchCase="False" SheetName="Sheet1">
                                        <bes:FindReplace.CellRange>
                                          <InArgument x:TypeArguments="x:String">
                                            <Literal x:TypeArguments="x:String" Value="" />
                                          </InArgument>
                                        </bes:FindReplace.CellRange>
                                        <bes:FindReplace.ReplaceText>
                                          <InArgument x:TypeArguments="x:String">
                                            <Literal x:TypeArguments="x:String" Value="" />
                                          </InArgument>
                                        </bes:FindReplace.ReplaceText>
                                      </bes:FindReplace>
                                    </Sequence>
                                  </ActivityAction>
                                </bem:ExcelScope.Body>
                              </bem:ExcelScope>
                              <ui:KillProcess AppliesTo="{x:Null}" ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="915,132" sap2010:WorkflowViewState.IdRef="KillProcess_5" ProcessName="EXCEL" />
                              <Delay Duration="00:00:10" sap:VirtualizedContainerService.HintSize="915,22" sap2010:WorkflowViewState.IdRef="Delay_5" />
                              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="915,9252" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_350" InstanceCachePeriod="3000" WorkbookPath="[&quot;C:\Users\sesa494506\Pictures\New folder\&quot;+GetPath1+&quot;.xlsx&quot;]">
                                <ui:ExcelApplicationScope.Body>
                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="881,9143" sap2010:WorkflowViewState.IdRef="Sequence_5061">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Sequence DisplayName="Risk Level" sap:VirtualizedContainerService.HintSize="839,853" sap2010:WorkflowViewState.IdRef="Sequence_5033">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="Risk Level" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_327" Result="[LookRiskLevel]" SheetName="Sheet1" Value="Risk Level" />
                                        <If Condition="[LookRiskLevel is Nothing]" DisplayName="Check Risk Level" sap:VirtualizedContainerService.HintSize="797,634" sap2010:WorkflowViewState.IdRef="If_1200">
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,237" sap2010:WorkflowViewState.IdRef="Sequence_5031">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="Hello I am SE SuperRobot&#xA;&#xA;Process JVN SC Shortage Material Constrain data Error, Column not found : Column Risk Level&#xA;&#xA;Please ensure the name of column not change (same as per previous file), &#xA;punctuation marks (uppercase, lowercase, space, underscore, etc) on your excel file.&#xA;&#xA;Thank you&#xA;&#xA;Regards,&#xA;SE SuperRobot" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="SendOutlookMail_595" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="JVN SC Shortage Material Constrain Notification - Column Risk Level Not Found" To="Sri.Bahaduri@se.com">
                                                <ui:SendOutlookMail.Files>
                                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                                </ui:SendOutlookMail.Files>
                                              </ui:SendOutlookMail>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,477" sap2010:WorkflowViewState.IdRef="Sequence_5032">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1902">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[StrRisk]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookRiskLevel,"\d", "")]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_344" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookRiskLevel]" />
                                              <ui:ExcelReadRange AddHeaders="True" DataTable="[dt12]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_700" Range="[LookRiskLevel+&quot;:&quot;+StrRisk+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                              <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt12]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_76" SheetName="SupplyDemand" StartingCell="J1" />
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                      <Sequence DisplayName="Buyer Name" sap:VirtualizedContainerService.HintSize="839,853" sap2010:WorkflowViewState.IdRef="Sequence_5036">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="Buyer Name" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_328" Result="[LookBuyer]" SheetName="Sheet1" Value="Buyer Name" />
                                        <If Condition="[LookBuyer is Nothing]" DisplayName="Check Buyer Name" sap:VirtualizedContainerService.HintSize="797,634" sap2010:WorkflowViewState.IdRef="If_1201">
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,364" sap2010:WorkflowViewState.IdRef="Sequence_5034">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_98" SheetName="Sheet1" Text="Buyet Name" />
                                              <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="Hello I am SE SuperRobot&#xA;&#xA;Process JVN SC Shortage Material Constrain data Error, Column not found : Column Buyer Name&#xA;&#xA;Please ensure the name of column not change (same as per previous file), &#xA;punctuation marks (uppercase, lowercase, space, underscore, etc) on your excel file.&#xA;&#xA;Thank you&#xA;&#xA;Regards,&#xA;SE SuperRobot" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="SendOutlookMail_596" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="JVN SC Shortage Material Constrain Notification - Column Buyer Name Not Found" To="Sri.Bahaduri@se.com">
                                                <ui:SendOutlookMail.Files>
                                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                                </ui:SendOutlookMail.Files>
                                              </ui:SendOutlookMail>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,477" sap2010:WorkflowViewState.IdRef="Sequence_5035">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1903">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[StrBuyer]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookBuyer,"\d","")]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_345" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookBuyer]" />
                                              <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_701" Range="[LookBuyer+&quot;:&quot;+StrBuyer+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                              <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_77" SheetName="SupplyDemand" StartingCell="A1" />
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                      <Sequence DisplayName="Part" sap:VirtualizedContainerService.HintSize="839,853" sap2010:WorkflowViewState.IdRef="Sequence_5039">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="Part" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_329" Result="[LookPart]" SheetName="Sheet1" Value="Part" />
                                        <If Condition="[LookPart is Nothing]" DisplayName="Check Part" sap:VirtualizedContainerService.HintSize="797,634" sap2010:WorkflowViewState.IdRef="If_1202">
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,364" sap2010:WorkflowViewState.IdRef="Sequence_5037">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:ExcelWriteCell Cell="B1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_99" SheetName="Sheet1" Text="Part" />
                                              <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="Hello I am SE SuperRobot&#xA;&#xA;Process JVN SC Shortage Material Constrain data Error, Column not found : Column Part&#xA;&#xA;Please ensure the name of column not change (same as per previous file), &#xA;punctuation marks (uppercase, lowercase, space, underscore, etc) on your excel file.&#xA;&#xA;Thank you&#xA;&#xA;Regards,&#xA;SE SuperRobot" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="SendOutlookMail_597" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="JVN SC Shortage Material Constrain Notification - Column Part Not Found" To="Sri.Bahaduri@se.com">
                                                <ui:SendOutlookMail.Files>
                                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                                </ui:SendOutlookMail.Files>
                                              </ui:SendOutlookMail>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,477" sap2010:WorkflowViewState.IdRef="Sequence_5038">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1904">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[StrPart]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookPart,"\d","")]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_346" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookPart]" />
                                              <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_702" Range="[LookPart+&quot;:&quot;+StrPart+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                              <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_78" SheetName="SupplyDemand" StartingCell="B1" />
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                      <Sequence DisplayName="Supplier" sap:VirtualizedContainerService.HintSize="839,853" sap2010:WorkflowViewState.IdRef="Sequence_5042">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="Supplier" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_330" Result="[LookSupplier]" SheetName="Sheet1" Value="Supplier" />
                                        <If Condition="[LookSupplier is Nothing]" DisplayName="Check Supplier" sap:VirtualizedContainerService.HintSize="797,634" sap2010:WorkflowViewState.IdRef="If_1203">
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,364" sap2010:WorkflowViewState.IdRef="Sequence_5040">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:ExcelWriteCell Cell="C1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_100" SheetName="Sheet1" Text="Supplier" />
                                              <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="Hello I am SE SuperRobot&#xA;&#xA;Process JVN SC Shortage Material data Error, Column not found : Column Supplier&#xA;&#xA;Please ensure the name of column not change (same as per previous file), &#xA;punctuation marks (uppercase, lowercase, space, underscore, etc) on your excel file.&#xA;&#xA;Thank you&#xA;&#xA;Regards,&#xA;SE SuperRobot" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="SendOutlookMail_598" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="JVN SC Shortage Material Constrain Notification - Column Supplier Not Found" To="Sri.Bahaduri@se.com">
                                                <ui:SendOutlookMail.Files>
                                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                                </ui:SendOutlookMail.Files>
                                              </ui:SendOutlookMail>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,477" sap2010:WorkflowViewState.IdRef="Sequence_5041">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1905">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[StrSupplier]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookSupplier,"\d","")]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_347" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookSupplier]" />
                                              <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_703" Range="[LookSupplier+&quot;:&quot;+StrSupplier+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                              <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_79" SheetName="SupplyDemand" StartingCell="C1" />
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                      <Sequence DisplayName="Manufacturer" sap:VirtualizedContainerService.HintSize="839,853" sap2010:WorkflowViewState.IdRef="Sequence_5045">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="Manufacturer" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_331" Result="[LookManuf]" SheetName="Sheet1" Value="Manufacturer" />
                                        <If Condition="[LookManuf is Nothing]" DisplayName="Check Manufacturer" sap:VirtualizedContainerService.HintSize="797,634" sap2010:WorkflowViewState.IdRef="If_1204">
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,364" sap2010:WorkflowViewState.IdRef="Sequence_5043">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:ExcelWriteCell Cell="D1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_101" SheetName="Sheet1" Text="Manufacturer" />
                                              <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="Hello I am SE SuperRobot&#xA;&#xA;Process JVN SC Shortage Material Condtrain data Error, Column not found : Column Manufacturer&#xA;&#xA;Please ensure the name of column not change (same as per previous file), &#xA;punctuation marks (uppercase, lowercase, space, underscore, etc) on your excel file.&#xA;&#xA;Thank you&#xA;&#xA;Regards,&#xA;SE SuperRobot" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="SendOutlookMail_599" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="JVN SC Shortage Material Constrain Notification - Column Manufacturer Not Found" To="Sri.Bahaduri@se.com">
                                                <ui:SendOutlookMail.Files>
                                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                                </ui:SendOutlookMail.Files>
                                              </ui:SendOutlookMail>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,477" sap2010:WorkflowViewState.IdRef="Sequence_5044">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1906">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[StrManuf]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookManuf,"\d","")]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_348" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookManuf]" />
                                              <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_704" Range="[LookManuf+&quot;:&quot;+StrManuf+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                              <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_80" SheetName="SupplyDemand" StartingCell="D1" />
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                      <Sequence DisplayName="MPN" sap:VirtualizedContainerService.HintSize="839,853" sap2010:WorkflowViewState.IdRef="Sequence_5048">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="MPN" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_332" Result="[LookMPN]" SheetName="Sheet1" Value="MPN" />
                                        <If Condition="[LookMPN is Nothing]" DisplayName="Check MPN" sap:VirtualizedContainerService.HintSize="797,634" sap2010:WorkflowViewState.IdRef="If_1205">
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,364" sap2010:WorkflowViewState.IdRef="Sequence_5046">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:ExcelWriteCell Cell="E1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_102" SheetName="Sheet1" Text="MPN" />
                                              <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="Hello I am SE SuperRobot&#xA;&#xA;Process JVN SC Shortage Material Constrain data Error, Column not found : Column MPN&#xA;&#xA;Please ensure the name of column not change (same as per previous file), &#xA;punctuation marks (uppercase, lowercase, space, underscore, etc) on your excel file.&#xA;&#xA;Thank you&#xA;&#xA;Regards,&#xA;SE SuperRobot" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="SendOutlookMail_600" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="JVN SC Shortage Material Constrain Notification - Column MPN Not Found" To="Sri.Bahaduri@se.com">
                                                <ui:SendOutlookMail.Files>
                                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                                </ui:SendOutlookMail.Files>
                                              </ui:SendOutlookMail>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,477" sap2010:WorkflowViewState.IdRef="Sequence_5047">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1907">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[StrMPN]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookMPN,"\d","")]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_349" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookMPN]" />
                                              <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_705" Range="[LookMPN+&quot;:&quot;+StrMPN+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                              <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_81" SheetName="SupplyDemand" StartingCell="E1" />
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                      <Sequence sap:VirtualizedContainerService.HintSize="839,853" sap2010:WorkflowViewState.IdRef="Sequence_5051">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="LookUp Range" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_333" Result="[LookCommodity]" SheetName="Sheet1" Value="Commodity" />
                                        <If Condition="[LookCommodity is Nothing]" sap:VirtualizedContainerService.HintSize="797,634" sap2010:WorkflowViewState.IdRef="If_1206">
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,364" sap2010:WorkflowViewState.IdRef="Sequence_5049">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:ExcelWriteCell Cell="F1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_103" SheetName="Sheet1" Text="Commodity" />
                                              <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="Hello I am SE SuperRobot&#xA;&#xA;Process JVN SC Shortage Material Constrain data Error, Column not found : Column Commodity&#xA;&#xA;Please ensure the name of column not change (same as per previous file), &#xA;punctuation marks (uppercase, lowercase, space, underscore, etc) on your excel file.&#xA;&#xA;Thank you&#xA;&#xA;Regards,&#xA;SE SuperRobot" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="SendOutlookMail_601" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="JVN SC Shortage Material Constrain Notification - Column Commodity Not Found" To="Sri.Bahaduri@se.com">
                                                <ui:SendOutlookMail.Files>
                                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                                </ui:SendOutlookMail.Files>
                                              </ui:SendOutlookMail>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,477" sap2010:WorkflowViewState.IdRef="Sequence_5050">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1908">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[StrCommodity]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookCommodity,"\d","")]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_350" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookCommodity]" />
                                              <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_706" Range="[LookCommodity+&quot;:&quot;+StrCommodity+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                              <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_82" SheetName="SupplyDemand" StartingCell="F1" />
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                      <Sequence sap:VirtualizedContainerService.HintSize="839,853" sap2010:WorkflowViewState.IdRef="Sequence_5054">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="LookUp Range" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_334" Result="[LookWhere]" SheetName="Sheet1" Value="Where Use" />
                                        <If Condition="[LookWhere is Nothing]" sap:VirtualizedContainerService.HintSize="797,634" sap2010:WorkflowViewState.IdRef="If_1207">
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,364" sap2010:WorkflowViewState.IdRef="Sequence_5052">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:ExcelWriteCell Cell="G1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_104" SheetName="Sheet1" Text="Where Use" />
                                              <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="Hello I am SE SuperRobot&#xA;&#xA;Process JVN SC Shortage Material Constrain data Error, Column not found : Column Where use&#xA;&#xA;Please ensure the name of column not change (same as per previous file), &#xA;punctuation marks (uppercase, lowercase, space, underscore, etc) on your excel file.&#xA;&#xA;Thank you&#xA;&#xA;Regards,&#xA;SE SuperRobot" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="SendOutlookMail_602" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="JVN SC Shortage Material Constrain Notification - Column Where use Not Found" To="Sri.Bahaduri@se.com">
                                                <ui:SendOutlookMail.Files>
                                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                                </ui:SendOutlookMail.Files>
                                              </ui:SendOutlookMail>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,477" sap2010:WorkflowViewState.IdRef="Sequence_5053">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1909">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[StrWhere]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookWhere,"\d","")]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_351" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookWhere]" />
                                              <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_707" Range="[LookWhere+&quot;:&quot;+StrWhere+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                              <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_83" SheetName="SupplyDemand" StartingCell="G1" />
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                      <Sequence sap:VirtualizedContainerService.HintSize="839,853" sap2010:WorkflowViewState.IdRef="Sequence_5057">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="LookUp Range" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_335" Result="[LookFamily]" SheetName="Sheet1" Value="Family" />
                                        <If Condition="[LookFamily is Nothing]" sap:VirtualizedContainerService.HintSize="797,634" sap2010:WorkflowViewState.IdRef="If_1208">
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,364" sap2010:WorkflowViewState.IdRef="Sequence_5055">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:ExcelWriteCell Cell="H1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_105" SheetName="Sheet1" Text="Family" />
                                              <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="Hello I am SE SuperRobot&#xA;&#xA;Process JVN SC Shortage Material Constrain data Error, Column not found : Column Family&#xA;&#xA;Please ensure the name of column not change (same as per previous file), &#xA;punctuation marks (uppercase, lowercase, space, underscore, etc) on your excel file.&#xA;&#xA;Thank you&#xA;&#xA;Regards,&#xA;SE SuperRobot" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="SendOutlookMail_603" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="JVN SC Shortage Material Constrain Notification - Column Family Not Found" To="Sri.Bahaduri@se.com">
                                                <ui:SendOutlookMail.Files>
                                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                                </ui:SendOutlookMail.Files>
                                              </ui:SendOutlookMail>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,477" sap2010:WorkflowViewState.IdRef="Sequence_5056">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1910">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[StrFamily]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookFamily,"\d","")]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_352" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookFamily]" />
                                              <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_708" Range="[LookFamily+&quot;:&quot;+StrFamily+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                              <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_84" SheetName="SupplyDemand" StartingCell="H1" />
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                      <Sequence sap:VirtualizedContainerService.HintSize="839,853" sap2010:WorkflowViewState.IdRef="Sequence_5060">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="LookUp Range" sap:VirtualizedContainerService.HintSize="797,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_336" Result="[LookSC]" SheetName="Sheet1" Value="SC/SNC" />
                                        <If Condition="[LookSC is Nothing]" sap:VirtualizedContainerService.HintSize="797,634" sap2010:WorkflowViewState.IdRef="If_1209">
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,364" sap2010:WorkflowViewState.IdRef="Sequence_5058">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:ExcelWriteCell Cell="I1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_106" SheetName="Sheet1" Text="SC/SNC" />
                                              <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="Hello I am SE SuperRobot&#xA;&#xA;Process JVN SC Shortage Material Constrain data Error, Column not found : Column SC/SNC&#xA;&#xA;Please ensure the name of column not change (same as per previous file), &#xA;punctuation marks (uppercase, lowercase, space, underscore, etc) on your excel file.&#xA;&#xA;Thank you&#xA;&#xA;Regards,&#xA;SE SuperRobot" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="SendOutlookMail_604" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="JVN SC Shortage Material Constrain Notification - Column SC/SNC Not Found" To="Sri.Bahaduri@se.com">
                                                <ui:SendOutlookMail.Files>
                                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                                </ui:SendOutlookMail.Files>
                                              </ui:SendOutlookMail>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,477" sap2010:WorkflowViewState.IdRef="Sequence_5059">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1911">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[StrSC]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(LookSC,"\d","")]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_353" Result="[OutCol]" SheetName="Sheet1" StartingCell="[LookSC]" />
                                              <ui:ExcelReadRange AddHeaders="True" DataTable="[dt13]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_709" Range="[LookSC+&quot;:&quot;+StrSC+(OutCol.Count+500).ToString]" SheetName="Sheet1" />
                                              <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt13]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_85" SheetName="SupplyDemand" StartingCell="I1" />
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                      <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="839,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_2" />
                                      <ui:ExcelReadRange Range="{x:Null}" AddHeaders="False" DataTable="[dtCsv]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="839,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_710" SheetName="SupplyDemand" />
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ExcelApplicationScope.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelApplicationScope>
                              <Sequence sap:VirtualizedContainerService.HintSize="915,444" sap2010:WorkflowViewState.IdRef="Sequence_5062">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1912">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[textReplace]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[GetPath1]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1913">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="s:String[]">[ReplaceText]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="s:String[]">[textReplace.Split("_"C)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:WriteCsvFile Encoding="{x:Null}" AddHeaders="False" DataTable="[dtCsv]" Delimitator="Comma" DisplayName="Write CSV" FilePath="[&quot;\\10.155.152.114\EMS_Upload\JVN SC SHORTAGE CONSTRAINT\JVN SC SHORTAGE CONSTRAINT &quot;+ReplaceText(2).ToString+&quot;.csv&quot;]" sap:VirtualizedContainerService.HintSize="334,152" sap2010:WorkflowViewState.IdRef="WriteCsvFile_2" />
                              </Sequence>
                              <ui:CopyFile ContinueOnError="{x:Null}" Destination="[&quot;\\10.155.152.114\EMS_Upload\JVN SC SHORTAGE CONSTRAINT\JVN SC SHORTAGE CONSTRAINT &quot;+ReplaceText(2).ToString+&quot;.xlsx&quot;]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="915,157" sap2010:WorkflowViewState.IdRef="CopyFile_2" Overwrite="True" Path="[subfileitem.ToString]" />
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </ActivityAction>
                  </ui:ExcelApplicationScope.Body>
                </ui:ExcelApplicationScope>
              </Sequence>
            </ActivityAction>
          </ui:ForEach.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEach>
      </Sequence>
    </FlowStep>
  </Flowchart>
</Activity>