<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="949,961" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:bem="clr-namespace:BalaReva.EasyExcel.Main;assembly=BalaReva.EasyExcel" xmlns:bes="clr-namespace:BalaReva.EasyExcel.Sheets;assembly=BalaReva.EasyExcel" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System" xmlns:ucat="clr-namespace:UiPath.Core.Activities.TextModifications;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:umab="clr-namespace:UiPath.Mail.Activities.Business;assembly=UiPath.Mail.Activities" xmlns:umabh="clr-namespace:UiPath.Mail.Activities.Business.HtmlEditor;assembly=UiPath.Mail.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="69">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.Platform.Triggers</x:String>
      <x:String>UiPath.Platform.Triggers.Scope</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OCR.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>DocumentFormat.OpenXml.Spreadsheet</x:String>
      <x:String>DocumentFormat.OpenXml</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>BalaReva.EasyExcel.Sheets</x:String>
      <x:String>BalaReva.EasyExcel.Base</x:String>
      <x:String>BalaReva.EasyExcel.Main</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>BalaReva.Excel.Enums</x:String>
      <x:String>BalaReva.Excel.Sheets</x:String>
      <x:String>BalaReva.Excel.Base</x:String>
      <x:String>BalaReva.EasyExcel.Utilities</x:String>
      <x:String>BalaReva.Excel.WorkBook</x:String>
      <x:String>UiPath.Core.Activities.TextModifications</x:String>
      <x:String>BalaReva.EasyExcel.Tools</x:String>
      <x:String>Box.V2.Models</x:String>
      <x:String>UiPath.Box.Activities.Search</x:String>
      <x:String>UiPath.Box.Activities</x:String>
      <x:String>UiPath.Box.Activities.Folder</x:String>
      <x:String>UiPath.Box.Activities.Enums</x:String>
      <x:String>System.Security</x:String>
      <x:String>Box.V2</x:String>
      <x:String>UiPath.Box.Activities.File</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>BalaReva.EasyExcel.EmptyRows</x:String>
      <x:String>UiPath.Mail.Activities.Business.HtmlEditor</x:String>
      <x:String>UiPath.Mail.Activities.Business</x:String>
      <x:String>UiPath.Mail</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="42">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>DocumentFormat.OpenXml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>BalaReva.EasyExcel</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>BalaReva.Excel</AssemblyReference>
      <AssemblyReference>BalaReva.Excel.Base</AssemblyReference>
      <AssemblyReference>BalaReva.EasyExcel.Utilities</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>Box.V2</AssemblyReference>
      <AssemblyReference>UiPath.Box.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="JVN Shipment" sap:VirtualizedContainerService.HintSize="959,896" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" Default="[Now.ToString(&quot;MM/dd/yyyy&quot;)]" Name="DateString" />
      <Variable x:TypeArguments="x:String" Name="YesterdaysDate" />
      <Variable x:TypeArguments="s:DateTime" Name="get_date" />
      <Variable x:TypeArguments="x:String" Name="FileDate" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtCsv" />
      <Variable x:TypeArguments="s:String[]" Name="GetFileFromDir" />
      <Variable x:TypeArguments="s:DateTime" Name="getDate" />
      <Variable x:TypeArguments="x:String" Name="template" />
      <Variable x:TypeArguments="sd:DataTable" Name="FilterYield" />
      <Variable x:TypeArguments="sd:DataTable" Name="readData" />
      <Variable x:TypeArguments="x:Boolean" Name="ReadCell" />
      <Variable x:TypeArguments="x:String" Name="GetPath1" />
      <Variable x:TypeArguments="sd:DataTable" Name="PathFile" />
      <Variable x:TypeArguments="x:Int32" Name="i" />
      <Variable x:TypeArguments="x:Boolean" Name="MatchColumn" />
      <Variable x:TypeArguments="x:String" Name="replaceName" />
      <Variable x:TypeArguments="x:Boolean" Name="MatchFPY" />
      <Variable x:TypeArguments="x:String" Name="replaceName1" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="Sheets" />
      <Variable x:TypeArguments="x:String" Name="tempWorkbook" />
      <Variable x:TypeArguments="x:String" Name="SheetWorkbook" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt12" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt13" />
      <Variable x:TypeArguments="s:DateTime" Name="CellDate" />
      <Variable x:TypeArguments="x:String" Name="CellDate1" />
      <Variable x:TypeArguments="x:String" Name="CellDate3" />
      <Variable x:TypeArguments="x:String" Name="SheetFilter" />
      <Variable x:TypeArguments="x:String" Name="textReplace" />
      <Variable x:TypeArguments="s:String[]" Name="ReplaceText" />
      <Variable x:TypeArguments="s:String[]" Name="GetSubFolder1" />
      <Variable x:TypeArguments="x:Int32" Name="Count" />
      <Variable x:TypeArguments="x:Boolean" Name="SheetNew" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtIndex" />
      <Variable x:TypeArguments="sd:DataTable" Name="Out2" />
      <Variable x:TypeArguments="x:Boolean" Name="SheetItem" />
      <Variable x:TypeArguments="x:Int32" Name="CountNumSheet" />
      <Variable x:TypeArguments="s:String[]" Name="GetSubFolder" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="SheetsWorkbook" />
      <Variable x:TypeArguments="x:Int32" Name="StatusError" />
      <Variable x:TypeArguments="x:Int32" Name="NumCell" />
      <Variable x:TypeArguments="x:String" Name="CheckCell">
        <Variable.Default>
          <Literal x:TypeArguments="x:String" Value="" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:Int32" Name="ErrorStatus" />
      <Variable x:TypeArguments="x:String" Name="GetFileExist" />
      <Variable x:TypeArguments="x:Int32" Name="WeekDate" />
      <Variable x:TypeArguments="x:Boolean" Name="Existpath" />
      <Variable x:TypeArguments="s:String[]" Name="GetSheetName" />
      <Variable x:TypeArguments="x:String" Name="strFileName" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtFileChecking" />
      <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="listEmail" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="wbShipment" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtShipmentData" />
      <Variable x:TypeArguments="x:String" Name="strDate" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">130,42.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">190,80 319,80</av:PointCollection>
        <x:Double x:Key="Height">859.65168750666373</x:Double>
        <x:Double x:Key="Width">924.80023859044456</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID6</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID6">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">319,50</av:Point>
          <av:Size x:Key="ShapeSize">262,60</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">450,110 450,180</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_1880">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strFileName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Directory.GetFiles("C:\Users\"+Environment.UserName+"\Box\EMS Control Tower\JVN DATA\Supply Chain\Shipment","*hipment*detail*.xls*").OrderByDescending(Function(d) New FileInfo(d).CreationTime).ToList(0).ToString]</InArgument>
        </Assign.Value>
      </Assign>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID0">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">319,180</av:Point>
              <av:Size x:Key="ShapeSize">262,60</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">450,240 450,296.5</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_1881">
            <Assign.To>
              <OutArgument x:TypeArguments="s:DateTime">[get_date]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="s:DateTime">[IO.File.GetLastWriteTime(strFileName)]</InArgument>
            </Assign.Value>
          </Assign>
          <FlowStep.Next>
            <FlowDecision x:Name="__ReferenceID1" Condition="[get_date.ToShortDateString = Now.ToShortDateString]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <av:Point x:Key="ShapeLocation">410.5,296.5</av:Point>
                  <av:Size x:Key="ShapeSize">79,87</av:Size>
                  <av:PointCollection x:Key="TrueConnector">410.5,340 300,340</av:PointCollection>
                  <av:PointCollection x:Key="FalseConnector">489.5,340 580,340</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <FlowDecision.True>
                <FlowStep x:Name="__ReferenceID2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">100,314.5</av:Point>
                      <av:Size x:Key="ShapeSize">200,51</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">200,365.5 200,414</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" DisplayName="Checking Sheet and Column" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_371" InstanceCachePeriod="3000" Visible="False" Workbook="[wbShipment]" WorkbookPath="[strFileName]">
                    <ui:ExcelApplicationScope.Body>
                      <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="562,1137" sap2010:WorkflowViewState.IdRef="Sequence_5003">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Name="strNotification" />
                            <Variable x:TypeArguments="x:String" Name="strMail" />
                            <Variable x:TypeArguments="s:String[]" Default="[new String(){&quot;Final base on Commit&quot;,&quot;Bill To&quot;,&quot;Part No&quot;,&quot;P/N&quot;,&quot;Quantity&quot;}]" Name="listColumnName" />
                            <Variable x:TypeArguments="x:String" Name="strSheetNameLower" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:BuildDataTable DataTable="[dtFileChecking]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="520,51" sap2010:WorkflowViewState.IdRef="BuildDataTable_2" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Column_x0020__x002F__x0020_Sheets&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Status&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Notes&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:BuildDataTable>
                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[new String(){&quot;Column/Sheet&quot;, &quot;Status&quot;, &quot;Notes&quot;}]" DataTable="[dtFileChecking]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="520,22" sap2010:WorkflowViewState.IdRef="AddDataRow_4" />
                          <ui:ExcelGetWorkbookSheets DisplayName="Get Workbook Sheets" sap:VirtualizedContainerService.HintSize="520,22" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_56" Sheets="[SheetsWorkbook]" />
                          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="Search Detail Sheet" sap:VirtualizedContainerService.HintSize="520,51" sap2010:WorkflowViewState.IdRef="ForEach`1_235" Values="[SheetsWorkbook.Where(Function(s) s Like &quot;*etail&quot;).ToList()]">
                            <ui:ForEach.Body>
                              <ActivityAction x:TypeArguments="x:String">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="x:String" Name="strNameSheet" />
                                </ActivityAction.Argument>
                                <Sequence sap:VirtualizedContainerService.HintSize="526,539" sap2010:WorkflowViewState.IdRef="Sequence_5030">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:ModifyText DisplayName="Modify Text" sap:VirtualizedContainerService.HintSize="484,52" sap2010:WorkflowViewState.IdRef="ModifyText_1" OutputText="[strSheetNameLower]" SourceText="[strNameSheet]">
                                    <ui:ModifyText.Body>
                                      <ActivityAction>
                                        <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_5031">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ucat:ToUpperLowerTextModification DisplayName="Text to Upper/Lowercase" sap:VirtualizedContainerService.HintSize="382,80" sap2010:WorkflowViewState.IdRef="ToUpperLowerTextModification_1" ModificationType="Lowercase" />
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:ModifyText.Body>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:ModifyText>
                                  <If Condition="[strSheetNameLower &lt;&gt; &quot;detail&quot;]" sap:VirtualizedContainerService.HintSize="484,355" sap2010:WorkflowViewState.IdRef="If_1172">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <Sequence sap:VirtualizedContainerService.HintSize="242,176" sap2010:WorkflowViewState.IdRef="Sequence_5028">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[new String(){&quot;Detail&quot;, &quot;Not Exist&quot;, &quot;Sheets Doesn't Exist&quot;}]" DataTable="[dtFileChecking]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
                                        <ui:Break sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Break_1" />
                                      </Sequence>
                                    </If.Then>
                                  </If>
                                </Sequence>
                              </ActivityAction>
                            </ui:ForEach.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:ForEach>
                          <If Condition="[dtFileChecking.Rows.Count = 1]" sap:VirtualizedContainerService.HintSize="520,51" sap2010:WorkflowViewState.IdRef="If_1193">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="562,742" sap2010:WorkflowViewState.IdRef="ForEach`1_237" Values="[listColumnName]">
                                <ui:ForEach.Body>
                                  <ActivityAction x:TypeArguments="x:String">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,609" sap2010:WorkflowViewState.IdRef="Sequence_5035">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="x:String" Name="strResult" />
                                      </Sequence.Variables>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="LookUp Range" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_460" Result="[strResult]" SheetName="Detail" Value="[item]" />
                                      <If Condition="[strResult = &quot;&quot;]" sap:VirtualizedContainerService.HintSize="484,290" sap2010:WorkflowViewState.IdRef="If_1194">
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_5034">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[new String(){item, &quot;Not Exist&quot;, &quot;Column Doesn't Exist&quot;}]" DataTable="[dtFileChecking]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_2" />
                                          </Sequence>
                                        </If.Then>
                                      </If>
                                      <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_1910">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[strResult]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">
                                            <Literal x:TypeArguments="x:String" Value="" />
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ForEach.Body>
                              </ui:ForEach>
                            </If.Then>
                          </If>
                          <ui:GetOutlookMailMessages FilterByMessageIds="{x:Null}" TimeoutMS="{x:Null}" Account="digital.transformation@non.se.com" DisplayName="Get Outlook Mail Messages" Filter="@SQL=urn:schemas:httpmail:subject LIKE '%JVN SC SHIPMENT Notification%'" GetAttachements="False" sap:VirtualizedContainerService.HintSize="520,22" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_2" MailFolder="Sent Items" MarkAsRead="False" Messages="[listEmail]" OnlyUnreadMessages="False" OrderByDate="NewestFirst" Top="1" />
                          <If Condition="[listEmail.Item(0).DateAsDateTime.ToShortDateString &lt;&gt; Now.ToShortDateString]" sap:VirtualizedContainerService.HintSize="520,586" sap2010:WorkflowViewState.IdRef="If_1195">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <If Condition="[dtFileChecking.Rows.Count &gt; 1]" sap:VirtualizedContainerService.HintSize="484,410" sap2010:WorkflowViewState.IdRef="If_1192">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="242,234" sap2010:WorkflowViewState.IdRef="Sequence_5029">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <umab:CreateHtmlContent DisplayName="Create HTML Content" sap:VirtualizedContainerService.HintSize="200,51" HtmlContent="[strMail]" sap2010:WorkflowViewState.IdRef="CreateHtmlContent_1">
                                      <umab:CreateHtmlContent.HtmlContentArg>
                                        <umabh:HtmlContentArgument FilePath=".data/HtmlContent0.html">
                                          <umabh:HtmlContentArgument.RuntimeImages>
                                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                          </umabh:HtmlContentArgument.RuntimeImages>
                                          <umabh:HtmlContentArgument.ValueMappings>
                                            <scg:List x:TypeArguments="umabh:HtmlValueMappingBase" Capacity="4">
                                              <umabh:HtmlTableValueMapping Name="Table" Value="[dtFileChecking]" />
                                            </scg:List>
                                          </umabh:HtmlContentArgument.ValueMappings>
                                        </umabh:HtmlContentArgument>
                                      </umab:CreateHtmlContent.HtmlContentArg>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </umab:CreateHtmlContent>
                                    <ui:SendOutlookMail Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Account="digital.transformation@non.se.com" Body="[strMail]" Cc="ApriyonoDwi.Indarto@se.com" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="SendOutlookMail_598" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" Subject="JVN SC SHIPMENT Notification" To="digital.transformationinternship@non.se.com">
                                      <ui:SendOutlookMail.Files>
                                        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                          <InArgument x:TypeArguments="x:String" />
                                        </scg:List>
                                      </ui:SendOutlookMail.Files>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:SendOutlookMail>
                                  </Sequence>
                                </If.Then>
                              </If>
                            </If.Then>
                          </If>
                        </Sequence>
                      </ActivityAction>
                    </ui:ExcelApplicationScope.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ExcelApplicationScope>
                  <FlowStep.Next>
                    <FlowStep x:Name="__ReferenceID5">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">100,414</av:Point>
                          <av:Size x:Key="ShapeSize">200,51</av:Size>
                          <av:PointCollection x:Key="ConnectorLocation">200,465 200,514</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <bem:ExcelScope FilePassword="{x:Null}" ModifyPassword="{x:Null}" DisplayAlerts="False" DisplayName="Replace Comma" FilePath="[strFileName]" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelScope_120" UpdateAutoLinks="Default" Visible="False">
                        <bem:ExcelScope.Body>
                          <ActivityAction x:TypeArguments="bem:ExcelParam">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="bem:ExcelParam" Name="WorkBookObj" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_5061">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <bes:FindReplace ExecutionResult="{x:Null}" Output="{x:Null}" ContinueOnError="True" Delay="3" DisplayName="Find &amp; Replace" FindOption="Part" FindText="," sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="FindReplace_139" MatchCase="False" ReplaceText=";" SheetName="Sheet1">
                                <bes:FindReplace.CellRange>
                                  <InArgument x:TypeArguments="x:String">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                </bes:FindReplace.CellRange>
                              </bes:FindReplace>
                            </Sequence>
                          </ActivityAction>
                        </bem:ExcelScope.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </bem:ExcelScope>
                      <FlowStep.Next>
                        <FlowStep x:Name="__ReferenceID3">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">100,514</av:Point>
                              <av:Size x:Key="ShapeSize">200,51</av:Size>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" DisplayName="Scrap Shipment Data" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_373" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[strFileName]">
                            <ui:ExcelApplicationScope.Body>
                              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="476,1159" sap2010:WorkflowViewState.IdRef="Sequence_5027">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="x:String" Name="strHeaderPosition" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DelayBefore="3000" DisplayName="Remove Filter" sap:VirtualizedContainerService.HintSize="434,152" sap2010:WorkflowViewState.IdRef="SendHotkey_157" Key="L" KeyModifiers="Ctrl, Shift">
                                    <ui:SendHotkey.Target>
                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="66988ac9-568e-446e-8cc8-a1227a49ce50" InformativeScreenshot="a11da713e8dedce740d80d0f46208c51" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='* - Excel' /&gt;&lt;ctrl name='*' role='client' /&gt;">
                                        <ui:Target.TimeoutMS>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:Target.TimeoutMS>
                                        <ui:Target.WaitForReady>
                                          <InArgument x:TypeArguments="ui:WaitForReady" />
                                        </ui:Target.WaitForReady>
                                      </ui:Target>
                                    </ui:SendHotkey.Target>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:SendHotkey>
                                  <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="LookUp Range" sap:VirtualizedContainerService.HintSize="434,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_464" Result="[strHeaderPosition]" SheetName="detail" Value="Bill To" />
                                  <ui:ExcelReadRange AddHeaders="True" DataTable="[dtShipmentData]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="434,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_853" Range="[&quot;A&quot;+System.Text.RegularExpressions.Regex.Match(strHeaderPosition,&quot;[0-9]&quot;).Value]" SheetName="detail">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:ExcelReadRange>
                                  <Assign sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Assign_1922">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strDate]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(Path.GetFileNameWithoutExtension(strFileName),"\d+").Value]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:FilterDataTable DataTable="[dtShipmentData]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="434,160" sap2010:WorkflowViewState.IdRef="FilterDataTable_196" OutputDataTable="[dtShipmentData]" SelectColumnsMode="Keep">
                                    <ui:FilterDataTable.Filters>
                                      <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                        <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                          <ui:FilterOperationArgument.Column>
                                            <InArgument x:TypeArguments="x:String">["Final base on Commit"]</InArgument>
                                          </ui:FilterOperationArgument.Column>
                                          <ui:FilterOperationArgument.Operand>
                                            <InArgument x:TypeArguments="x:String">[strDate.Substring((strDate.Length-2),2)]</InArgument>
                                          </ui:FilterOperationArgument.Operand>
                                        </ui:FilterOperationArgument>
                                        <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                          <ui:FilterOperationArgument.Column>
                                            <InArgument x:TypeArguments="x:String">["Year"]</InArgument>
                                          </ui:FilterOperationArgument.Column>
                                          <ui:FilterOperationArgument.Operand>
                                            <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(strDate.Substring(0,4))]</InArgument>
                                          </ui:FilterOperationArgument.Operand>
                                        </ui:FilterOperationArgument>
                                      </scg:List>
                                    </ui:FilterDataTable.Filters>
                                    <ui:FilterDataTable.SelectColumns>
                                      <scg:List x:TypeArguments="InArgument" Capacity="4">
                                        <InArgument x:TypeArguments="x:String">["Bill To"]</InArgument>
                                        <InArgument x:TypeArguments="x:String">["Part No"]</InArgument>
                                        <InArgument x:TypeArguments="x:String">["P/N"]</InArgument>
                                        <InArgument x:TypeArguments="x:String">["Quantity"]</InArgument>
                                      </scg:List>
                                    </ui:FilterDataTable.SelectColumns>
                                  </ui:FilterDataTable>
                                  <ui:CopyFile ContinueOnError="{x:Null}" Destination="[&quot;\\10.155.152.114\EMS_Upload\JVN SC COMJVN\JVN SC COMJVN SHIPMENT&quot;+strDate+&quot;.xlsx&quot;]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="434,157" sap2010:WorkflowViewState.IdRef="CopyFile_416" Overwrite="True" Path="[strFileName]" />
                                  <ui:WriteCsvFile Encoding="{x:Null}" AddHeaders="True" DataTable="[dtShipmentData]" Delimitator="Comma" DisplayName="Write CSV" FilePath="[&quot;\\10.155.152.114\EMS_Upload\JVN SC COMJVN\JVN SC COMJVN SHIPMENT&quot;+strDate+&quot;.csv&quot;]" sap:VirtualizedContainerService.HintSize="434,152" sap2010:WorkflowViewState.IdRef="WriteCsvFile_234">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:WriteCsvFile>
                                </Sequence>
                              </ActivityAction>
                            </ui:ExcelApplicationScope.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:ExcelApplicationScope>
                        </FlowStep>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowStep.Next>
                </FlowStep>
              </FlowDecision.True>
              <FlowDecision.False>
                <FlowStep x:Name="__ReferenceID4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">580,314.5</av:Point>
                      <av:Size x:Key="ShapeSize">200,51</av:Size>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;End&quot;]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                </FlowStep>
              </FlowDecision.False>
            </FlowDecision>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
  </Flowchart>
</Activity>